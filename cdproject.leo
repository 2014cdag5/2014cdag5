<?xml version="1.0" encoding="utf-8"?>
<!-- Created by Leo (http://webpages.charter.net/edreamleo/front.html) -->
<?xml-stylesheet ekr_test?>
<leo_file xmlns:leo="http://www.leo-editor.org/2011/leo" >
<leo_header file_format="2" tnodes="0" max_tnode_index="0" clone_windows="0"/>
<globals body_outline_ratio="0.5" body_secondary_ratio="0.5">
	<global_window_position top="50" left="50" height="500" width="700"/>
	<global_log_window_position top="0" left="0" height="0" width="0"/>
</globals>
<preferences/>
<find_panel_settings/>
<vnodes>
<v t="course-mde-tw.20140417093332.1998"><vh>@settings</vh>
<v t="course-mde-tw.20140417093332.1999"><vh>@data qt-gui-plugin-style-sheet</vh></v>
<v t="course-mde-tw.20140417093332.2000"><vh>@string initial_split_orientation = horizontal</vh></v>
<v t="course-mde-tw.20140417093332.2001"><vh>@string rst3_write_intermediate_extension = .rst</vh></v>
</v>
<v t="course-mde-tw.20140417093332.2063"><vh>協同產品設計實習</vh></v>
<v t="2014pythonE.20140422152422.1669"><vh>電子郵箱管理</vh></v>
<v t="2014pythonE.20140422152422.1671"><vh>Github 帳號管理</vh></v>
<v t="2014pythonE.20140422152422.1670"><vh>OpenShift 權限管理</vh></v>
<v t="course-mde-tw.20140422171455.1745"><vh>Github 倉儲與 OpenShift 同步</vh></v>
<v t="2014spring.20140430175148.1771"><vh>@edit README.md</vh></v>
<v t="2014spring.20140430205920.1773"><vh>分散式課程評量</vh></v>
<v t="2014spring.20140430165707.2063"><vh>第十一週任務</vh>
<v t="2014spring.20140506093255.1795"><vh>組立約束條件</vh></v>
<v t="2014spring.20140506093255.1796"><vh>組立 0 程式</vh></v>
</v>
<v t="2014spring.20140508134612.2129"><vh>第十二週任務</vh></v>
<v t="course-mde-tw.20140417093332.2027" a="E"><vh>@path wsgi</vh>
<v t="course-mde-tw.20140417093332.2028" a="E"
expanded="course-mde-tw.20140417093332.2030,"><vh>@file application</vh></v>
<v t="2014spring.20140508134612.2197" a="O"><vh>@file cmsimply.py</vh>
<v t="2014spring.20140508134612.2198"><vh>&lt;&lt;declarations&gt;&gt; (cmsimply.py)</vh></v>
<v t="2014spring.20140508134612.2199"><vh>downloadlist_access_list</vh></v>
<v t="2014spring.20140508134612.2200"><vh>sizeof_fmt</vh></v>
<v t="2014spring.20140508134612.2201"><vh>set_admin_css</vh></v>
<v t="2014spring.20140508134612.2202"><vh>set_footer</vh></v>
<v t="2014spring.20140508134612.2203"><vh>file_get_contents</vh></v>
<v t="2014spring.20140508134612.2204"><vh>search_content</vh></v>
<v t="2014spring.20140508134612.2205"><vh>parse_content</vh></v>
<v t="2014spring.20140508134612.2206"><vh>render_menu</vh></v>
<v t="2014spring.20140508134612.2207"><vh>filebrowser</vh></v>
<v t="2014spring.20140508134612.2208"><vh>syntaxhighlight</vh></v>
<v t="2014spring.20140508134612.2209"><vh>editorhead</vh></v>
<v t="2014spring.20140508134612.2210"><vh>tinymceinit</vh></v>
<v t="2014spring.20140508134612.2211"><vh>editorfoot</vh></v>
<v t="2014spring.20140508134612.2212"><vh>tinymce_editor</vh></v>
<v t="2014spring.20140508134612.2213"><vh>parse_config</vh></v>
<v t="2014spring.20140508134612.2214"><vh>file_selector_script</vh></v>
<v t="2014spring.20140508134612.2215"><vh>file_lister</vh></v>
<v t="2014spring.20140508134612.2216"><vh>downloadselect_access_list</vh></v>
<v t="2014spring.20140508134612.2217"><vh>loadlist_access_list</vh></v>
<v t="2014spring.20140508134612.2218"><vh>imageselect_access_list</vh></v>
<v t="2014spring.20140508134612.2219"><vh>sizeof_fmt</vh></v>
<v t="2014spring.20140508134612.2220"><vh>unique</vh></v>
<v t="2014spring.20140508134612.2221" a="E"><vh>class CMSimply</vh>
<v t="2014spring.20140508134612.2222"><vh>__init__</vh></v>
<v t="2014spring.20140508134612.2223"><vh>index</vh></v>
<v t="2014spring.20140508134612.2224"><vh>default</vh></v>
<v t="2014spring.20140508134612.2225"><vh>error_log</vh></v>
<v t="2014spring.20140508134612.2226"><vh>login</vh></v>
<v t="2014spring.20140508134612.2227"><vh>logout</vh></v>
<v t="2014spring.20140508134612.2228"><vh>checkLogin</vh></v>
<v t="2014spring.20140508134612.2229"><vh>get_page</vh></v>
<v t="2014spring.20140508134612.2230"><vh>isAdmin</vh></v>
<v t="2014spring.20140508134612.2231"><vh>edit_page</vh></v>
<v t="2014spring.20140508134612.2232"><vh>savePage</vh></v>
<v t="2014spring.20140508134612.2233"><vh>ssavePage</vh></v>
<v t="2014spring.20140508134612.2234"><vh>save_program</vh></v>
<v t="2014spring.20140508134612.2235"><vh>save_calcprogram</vh></v>
<v t="2014spring.20140508134612.2236"><vh>delete_program</vh></v>
<v t="2014spring.20140508134612.2237"><vh>delete_calcprogram</vh></v>
<v t="2014spring.20140508134612.2238"><vh>fileuploadform</vh></v>
<v t="2014spring.20140508134612.2239"><vh>fileaxupload</vh></v>
<v t="2014spring.20140508134612.2240"><vh>flvplayer</vh></v>
<v t="2014spring.20140508134612.2241"><vh>imageuploadform</vh></v>
<v t="2014spring.20140508134612.2242"><vh>imageaxupload</vh></v>
<v t="2014spring.20140508134612.2243"><vh>file_selector</vh></v>
<v t="2014spring.20140508134612.2244"><vh>download_list</vh></v>
<v t="2014spring.20140508134612.2245"><vh>load_list</vh></v>
<v t="2014spring.20140508134612.2246"><vh>delete_file</vh></v>
<v t="2014spring.20140508134612.2247"><vh>doDelete</vh></v>
<v t="2014spring.20140508134612.2248"><vh>creo_getvolume</vh></v>
<v t="2014spring.20140508134612.2249"><vh>anglebracket</vh></v>
<v t="2014spring.20140508134612.2250"><vh>search_form</vh></v>
<v t="2014spring.20140508134612.2251"><vh>doSearch</vh></v>
<v t="2014spring.20140508134612.2252"><vh>set_css</vh></v>
<v t="2014spring.20140508134612.2253"><vh>edit_config</vh></v>
<v t="2014spring.20140508134612.2254"><vh>saveConfig</vh></v>
<v t="2014spring.20140508134612.2255"><vh>listdir</vh></v>
<v t="2014spring.20140508134612.2256"><vh>sitemap</vh></v>
<v t="2014spring.20140508134612.2257"><vh>brython</vh></v>
<v t="2014spring.20140508134612.2258"><vh>ethercalc</vh></v>
<v t="2014spring.20140508134612.2259"><vh>calc</vh></v>
<v t="2014spring.20140508134612.2260"><vh>openjscad</vh></v>
<v t="2014spring.20140508134612.2261"><vh>ucrobot</vh></v>
</v>
<v t="2014spring.20140508134612.2262"><vh>class Download</vh>
<v t="2014spring.20140508134612.2263"><vh>index</vh></v>
</v>
</v>
</v>
<v t="2014spring.20140503125211.2097" a="E"><vh>分組程式開發</vh>
<v t="2014spring.20140503125211.2098"><vh>@path wsgi/programs/cdag1</vh>
<v t="2014spring.20140503125211.2099"><vh>@edit __init__.py</vh></v>
</v>
<v t="2014spring.20140503125211.2100"><vh>@path wsgi/programs/cdag2</vh>
<v t="2014spring.20140503125211.2101"><vh>@edit __init__.py</vh></v>
</v>
<v t="2014spring.20140513092629.1905"><vh>@path wsgi/programs/cdag3</vh>
<v t="2014spring.20140513092629.1906"><vh>@edit __init__.py</vh></v>
</v>
<v t="2014spring.20140513154549.2217"><vh>@path wsgi/programs/cdag4</vh>
<v t="2014spring.20140513154549.2218"><vh>@edit __init__.py</vh></v>
</v>
<v t="kmolII_lite.20140513162816.2130" a="E"><vh>@path wsgi/programs/cdag5</vh>
<v t="kmolII_lite.20140513162816.2131"><vh>@edit __init__.py</vh></v>
</v>
<v t="2014spring.20140513154549.2225" a="E"><vh>@path wsgi/programs/cdag10</vh>
<v t="2014spring.20140513154549.2226"><vh>@edit __init__.py</vh></v>
</v>
<v t="2014spring.20140513154549.2221"><vh>@path wsgi/programs/cdag14</vh>
<v t="2014spring.20140513154549.2222"><vh>@edit __init__.py</vh></v>
</v>
<v t="2014spring.20140513154549.2229" a="E"><vh>@path wsgi/programs/cdag16</vh>
<v t="2014spring.20140513154549.2230"><vh>@edit __init__.py</vh></v>
</v>
<v t="2014spring.20140513092629.2151" a="E"><vh>@path wsgi/programs/cdag17</vh>
<v t="2014spring.20140513092629.2152"><vh>@edit __init__.py</vh></v>
</v>
<v t="2014spring.20140506174436.1831" a="E"><vh>@path wsgi/programs/cdag30</vh>
<v t="2014spring.20140506174436.1832"><vh>@edit __init__.py</vh></v>
</v>
</v>
<v t="course-mde-tw.20140417093332.2058" a="E"><vh>利用 pandoc 進行格式轉換</vh>
<v t="course-mde-tw.20140422221207.1747"><vh>注意事項</vh></v>
<v t="2014spring.20140430205920.1897"><vh>@button pandoc_auto</vh></v>
<v t="course-mde-tw.20140417093332.2060" a="E"><vh>@path wsgi/doc</vh>
<v t="course-mde-tw.20140417093332.2061"><vh>@edit title.txt</vh></v>
</v>
</v>
<v t="course-mde-tw.20140417093332.2047" a="E"><vh>分組協同報告區</vh>
<v t="course-mde-tw.20140417093332.2048" a="E"><vh>@path wsgi/doc</vh>
<v t="course-mde-tw.20140417093332.2049" a="E"><vh>@path 2ag1</vh>
<v t="course-mde-tw.20140417093332.2050"><vh>@edit doc.txt</vh></v>
</v>
<v t="course-mde-tw.20140417093332.2051" a="E"><vh>@path 2ag2</vh>
<v t="course-mde-tw.20140417093332.2052"><vh>@edit doc.txt</vh></v>
</v>
<v t="2014pythonE.20140429104126.1755" a="E"><vh>@path 2ag3</vh>
<v t="2014pythonE.20140429104126.1756"><vh>@edit doc.txt</vh></v>
</v>
<v t="2014spring.20140506161101.1960" a="E"><vh>@path 2ag4</vh>
<v t="2014spring.20140506161101.1961"><vh>@edit doc.txt</vh></v>
</v>
<v t="kmolII_lite.20140430001511.1599" a="E"><vh>@path 2ag5</vh>
<v t="kmolII_lite.20140430001511.1600"><vh>@edit doc.txt</vh></v>
</v>
<v t="2014spring.20140506161101.1964" a="E"><vh>@path 2ag6</vh>
<v t="2014spring.20140506161101.1965"><vh>@edit doc.txt</vh></v>
</v>
<v t="2014pythonE.20140429160432.1843" a="E"><vh>@path 2ag7</vh>
<v t="2014pythonE.20140429160432.1844"><vh>@edit doc.txt</vh></v>
</v>
<v t="2014pythonE.20140512203125.1905" a="E"><vh>@path 2ag9</vh>
<v t="2014pythonE.20140512203125.1906"><vh>@edit doc.txt</vh></v>
</v>
<v t="2014spring.20140506161101.1968"><vh>@path 2ag10</vh>
<v t="2014spring.20140506161101.1969"><vh>@edit doc.txt</vh></v>
</v>
<v t="2014spring.20140506161101.1972"><vh>@path 2ag11</vh>
<v t="2014spring.20140506161101.1973"><vh>@edit doc.txt</vh></v>
</v>
<v t="2014spring.20140506161101.1976" a="E"><vh>@path 2ag12</vh>
<v t="2014spring.20140506161101.1977"><vh>@edit doc.txt</vh></v>
</v>
<v t="2014spring.20140506161101.1956"><vh>@path 2ag13</vh>
<v t="2014spring.20140506161101.1957"><vh>@edit doc.txt</vh></v>
</v>
<v t="2014spring.20140506161101.1980" a="E"><vh>@path 2ag14</vh>
<v t="2014spring.20140506161101.1981"><vh>@edit doc.txt</vh></v>
</v>
<v t="2014pythonE.20140429160432.1847" a="E"><vh>@path 2ag16</vh>
<v t="2014pythonE.20140429160432.1848"><vh>@edit doc.txt</vh></v>
</v>
<v t="2014spring.20140506161101.1984" a="E"><vh>@path 2ag17</vh>
<v t="2014spring.20140506161101.1985"><vh>@edit doc.txt</vh></v>
</v>
<v t="123.20140502221015.1628" a="E"><vh>@path 2ag21</vh>
<v t="123.20140502221015.1630"><vh>@edit doc.txt</vh></v>
</v>
<v t="2014pythonE.20140424070658.1679" a="E"><vh>@path coursemdetw</vh>
<v t="2014pythonE.20140424070658.1680"><vh>@auto doc.txt</vh></v>
</v>
</v>
</v>
</vnodes>
<tnodes>
<t tx="123.20140502221015.1628"></t>
<t tx="2014pythonE.20140422152422.1669">配合 2014cda 專案

2014cdaproject@gmail.com

正好可以有三個  Python 3.3 應用程式, 用於 

2014cda, 2014cdb, 2014c2 等三個專案使用</t>
<t tx="2014pythonE.20140422152422.1670">puttygen.exe 導入 private key 後, 以 Conversions-&gt;Export OpenSSH key

將資料存入 V:\home\.ssh\id_rsa 檔案中

當使用者利用  git clone OpenShift 平台上專案時, Git 將會利用 id_rsa 私鑰與 OpenShift settings 設定所儲存的 public key 進行配對, 若通過驗證才能更新或擷取 OpenShift 平台上的程式碼.</t>
<t tx="2014pythonE.20140422152422.1671">course-mde-tw on Github 使用 coursemdetw@gmail.com 登記

couorsemdetw on Github 使用 course@mde.tw 登記

2014cda, 2014cdb, 2014c2 Github 專案登記在 coursemdetw 名下

course-mde-tw 為協同人員

</t>
<t tx="2014pythonE.20140424070658.1679"></t>
<t tx="2014pythonE.20140429104126.1755"></t>
<t tx="2014pythonE.20140429160432.1843"></t>
<t tx="2014pythonE.20140429160432.1847"></t>
<t tx="2014pythonE.20140512203125.1905"></t>
<t tx="2014spring.20140430165707.2063">0. 請各組閱讀

https://wiki.mde.tw/doku.php?id=%E5%8D%94%E5%90%8C%E7%94%A2%E5%93%81%E8%A8%AD%E8%A8%88:2014s_week10

中的注意事項與 push 前確認事項.

1. 各組要自行建立 doc 檔案目錄, 而且可以納入 pandoc pdf 與 html 文件產生機制

2. 各組以協同模式在教材一中各選一段, 以英文+中文並陳的方式, 列在各自的 doc.txt 文件中. (之後將需要寫一個類似 pandoc  按鈕來整合此份文件)

3. 各組將上學期的 Pro/Web.Link 程式取出, 準備以各組編寫一個零件尺寸修改的模式來修改 application 雲端程式.

4. 除整班協同的 github 外, 各組需要在組內另外建立一個小分組協同專案來執行小分組協同任務.</t>
<t tx="2014spring.20140430205920.1773">評量規劃:

每週以組為單位執行分組任務, 評分類別如下:

每完成一項任務: 得分 5 分

幾乎完成: 得分 4 分

部分完成: 得分 3 分

未能完成: 得分 0 分

Week 12: 二項任務, 配分 10 分

Week 13: 三項任務, 配分 15 分

Week 14: 三項任務, 配分 15 分

Week 15: 三項任務, 配分 15 分

Week 16: 三項任務, 配分 15 分

Week 17: 三項任務, 配分 15 分

Week 18: 三項任務, 配分 15 分

備註: 

各週任務評量將在下課前 15 鐘完成

若該週因放假不上課, 則任務仍由 Github 專案上發送, 並以 take-home 模式執行.</t>
<t tx="2014spring.20140430205920.1897">@language python
import os
import re

def atoi(text):
    return int(text) if text.isdigit() else text

def natural_keys(text):
    '''
    alist.sort(key=natural_keys) sorts in human order
    http://nedbatchelder.com/blog/200712/human_sorting.html
    (See Toothy's implementation in the comments)
    '''
    return [ atoi(c) for c in re.split('(\d+)', text) ]
'''
c is the commander of the outline containing the script.
g is Leo's leo.core.leoGlobals module.
p is the presently selected position, the same as c.p.
'''
d = c.scanAllDirectives(p)
#g.es(d)
# d 為 commander 由目前所在目錄進行指令設定掃描
# d 資料格式為 dictionary
''' 
實際操作下, d 為 
{'tabwidth': -4, 'lineending': None, 'language': 'python', 'encoding': None, 'pluginsList': [], 'pagewidth': 70, 'wrap': True, 'path': 'D:\\github\\mdeCourse\\2013spring', 'delims': ('#', '', '')}
'''
# 在處理 pandoc 之前,  將協同人員上傳的 file1.txt 與 file2.txt 結合為 demo.txt
# 以下採用 os.walk 自動進入目錄取出目錄與檔案名稱後, 採自然排序
# 最後再利用 insert 將標題頁面放入數列最前頭
'''
# 這裡是原先使用的手動檔名排序數列, 好處為可以任意編排次序
filenames = ['title.txt', '2bg1/doc.txt', '2bg2/doc.txt', '2bg3/doc.txt', '2bg5/doc.txt', '2bg15/doc.txt', '2bg13/doc.txt', '2bg9/doc.txt']
'''
# 定義要合併檔案的共同目錄
directory = "V:/project/2014cda/wsgi/doc/"
# 定義一個空數列
filenames = []
for (path, dirs, files) in os.walk(directory):
    for fname in files:
        # 利用 if 判斷式將外部的 title.txt 與其他檔案隔開不取
        if path != directory:
            filenames.append(path+"/"+fname)
# 依照 natural_keys 客製化排序, 使用上面的函式定義
filenames.sort(key=natural_keys)
# 利用 insert 以 0 為索引, 將 title.txt 放在數列最前頭
filenames.insert(0, directory+"title.txt")
# 以下將依據 filenames 數列中的檔案合併為 result.txt 之後再進行文書處理轉換
with open('V:/project/2014cda/wsgi/pandoc/result.txt', 'w', encoding="utf-8") as outfile:
    for fname in filenames:
        #fname = directory+fname
        with open(fname, encoding="utf-8") as infile:
            for line in infile:
                outfile.write(line)
            outfile.write("\n\n")

# 將目錄指到 pandoc
mandir = d.get('path') + "/wsgi/pandoc"
g.es(mandir)
os.chdir(mandir)
# 先轉一份 html 
os.system("V:\\apps\\pandoc\\pandoc.exe -s result.txt -o result.html")
# 利用 pandoc 將 demo.txt 轉為 demo.tex, 在此決定是否要有 toc
os.system("V:\\apps\\pandoc\\pandoc.exe -s result.txt --toc -o result.tex")
# 中文設定必須要放在 begin document 之前
setup = ''' 
\\usepackage{xeCJK}    % 中英文字行分開設置 
\\usepackage[T1]{fontspec}    %設定字體用 
\\usepackage{graphicx} 
\\usepackage{fancyvrb} % for frame on Verbatim 
\\setCJKmainfont{新細明體}
'''
# 在 demo.tex 最前頭加上"中文設定"
file = open("result.tex", "r", encoding="utf-8")
lines = file.read().splitlines()
file.close()
file = open("result.tex", "w", encoding="utf-8")
for i in range(len(lines)):
    # 設法將中文設定放在文件開始之前, 以便蓋掉之前的設定
    if "\\begin{document}" in lines[i]:
        file.write(setup+lines[i]+"\n")
    else:
        file.write(lines[i]+"\n")
file.close()
target_name = "result"
filename = target_name+".tex"
os.system("V:\\apps\\portableLatex\\MiKTeX\\texmf\\miktex\\bin\\xelatex.exe -no-pdf -interaction=nonstopmode "+filename)
os.system("V:\\apps\\portableLatex\\MiKTeX\\texmf\\miktex\\bin\\xelatex.exe -no-pdf -interaction=nonstopmode "+filename)
filename = target_name+".xdv"
os.system("V:\\apps\\portableLatex\\MiKTeX\\texmf\\miktex\\bin\\xdvipdfmx.exe -vv -E "+filename)

filename = target_name+".pdf"
os.system(filename)</t>
<t tx="2014spring.20140503125211.2097">各分組在 Github 中要有一個參與 2014c2 協同程式開發的帳號外

各組員同時在 Github 與 Bitbucket 下都要有對應帳號, 並且利用 Github (不限協同人員個數, 但是免費帳號只允許建立開放專案)或 Bitbucket (專案可以選擇公開或私用, 但是免費帳號只允許最多 5 人協同) 的協同模式, 在小分組下共享程式碼.

Github 2014c2 全班協同專案將會有一個對應的 OpenShift 網站, 各組另外要建立一個分組的 OpenShift 網站與 Github 全班協同專案同步, 以練習各分組的雲端程式部署與控管流程 (各分組成員必須將各自的 public keys 放到分組 OpenShift 應用程式中, 並且自行練習以協同模式控管雲端網站, 而且要與各分組的 Bitbucket 或 Github 程式同步).

各分組雲端程式位於 wsgi/programs/c2g1 目錄下, 使用時必須:
    
    1. 確認主要程式 application 中已經導入分組模組, 且與 root 下屬方法加以對應
    
    也就是下列程式的置入.
    
#####################################################
# 這是 c2g1 組的物件案例定義
#####################################################
# 導入 application 目錄下的模組
# 導入 programs/c2g1 並且命名為 c2g1
# 模組內建使用 __init__.py 中的 C2G1 類別
# 若使用 programs/c2g1/class1.py, 則使用 import programs.c2g1.class1 as c2g1
import programs.c2g1 as c2g1
# 利用 c2g1 目錄下的 __init__.py 檔案中的 C2G1 類別建立案例物件
# 而且指到 application 根目錄下的 c2g1
root.c2g1 = c2g1.C2G1()
#####################################################
# 結束 c2g1 組的物件案例定義
#####################################################

    2. 各分組則在 wsgi/programs/c2gX 目錄下各自開發 __init__.py 程式方法
    
    3. 完成後先在近端測試, 完全符合需求且根據標準流程, 拉下目前協同專案區最新的 github 程式碼後, 檢驗 .leo 是否可以正確開啟, 各對應目錄是否正確配置, application 是否可以正確執行後, 再推送到協同專案區, 並與各分組的 OpenShift 雲端網站進行同步.</t>
<t tx="2014spring.20140503125211.2098"></t>
<t tx="2014spring.20140503125211.2100"></t>
<t tx="2014spring.20140506093255.1795">Constraint Attributes
約束條件屬性

Methods and Properties Introduced:
衍生的方法與性質

pfcConstraintAttributes.Create()
建立約束條件屬性

pfcConstraintAttributes.Force
強制約束條件

pfcConstraintAttributes.Ignore
忽略約束條件

The method pfcConstraintAttributes.Create() returns the constraint attributes object based on the values of the following input
parameters:
約束條件建立方法, 依照下列輸入變數而傳回不同的約束條件屬性

• Ignore—Constraint is ignored during regeneration. Use this capability to store extra constraints on the component, which allows you to quickly toggle between different constraints.
是否忽略 – 約束條件在更新模型時是否忽略, 可以利用此一忽略特性, 將額外的約束條件附加在組立元件上, 讓使用者可在不同約束條件間切換

• Force—Constraint has to be forced for line and point alignment.
是否強制 – 當使用線或點對齊約束時, 可以強制進行約束.

• None—No constraint attributes. This is the default value.
無約束屬性 – 內定為無約束屬性.

static pfcConstraintAttributes Create (boolean Force, boolean Ignore)

Creates a new constraint attributes object.
用來建立新的約束條件屬性物件

Parameters:
輸入變數

Force
強制變數

true if the constraint should be forced (required for ASM_CONSTRAINT_PNT_ON_LINE).
若設為真, 表示約束條件將會強制執行 (使用點在線上約束時必須設為真)

Ignore
忽略變數

true if the constraint is stored with the component, but not enforced. false if the constraint is enforced.
若設為真, 表示約束將附加在元件上, 但卻不強制執行, 若設為偽, 則該約束條件將會強制執行</t>
<t tx="2014spring.20140506093255.1796">&lt;!-- 組立 0 程式 --&gt;
&lt;script src="jscript/weblink/pfcUtils.js"&gt;
&lt;/script&gt;&lt;script language="JavaScript"&gt;
      if (!pfcIsWindows())
netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
  var session = pfcGetProESession();
// 建立擺放零件的位置矩陣
  var identityMatrix = pfcCreate ("pfcMatrix3D");
  for (var x = 0; x &lt; 4; x++)
    for (var y = 0; y &lt; 4; y++)
      {
    if (x == y)
      identityMatrix.Set (x, y, 1.0);
    else
      identityMatrix.Set (x, y, 0.0);
      }
  var transf = pfcCreate ("pfcTransform3D").Create (identityMatrix);
// 取得目前的工作目錄
  var currentDir = session.getCurrentDirectory();
// 以目前已開檔, 作為 model
  var model = session.CurrentModel;
// 查驗有無 model, 或 model 類別是否為組立件
  if (model == void null || model.Type != pfcCreate ("pfcModelType").MDL_ASSEMBLY)
    throw new Error (0, "Current model is not an assembly.");
  
  var assembly = model;
  
  var descr =
    pfcCreate ("pfcModelDescriptor").CreateFromFileName ("link1.prt");
// 若 link1.prt 在 session 則直接取用
  var componentModel = session.GetModelFromDescr (descr);
  
// 若 link1.prt 不在 session 則從工作目錄中載入 session
  var componentModel = session.RetrieveModel(descr);
// 若 link1.prt 已經在 session 則放入組立檔中
  if (componentModel != void null)
    {
  var asmcomp = assembly.AssembleComponent (componentModel, transf);
    }
//  設定組立檔中的三個定位面, 注意內定名稱與 Pro/E WF 中的 ASM_D_FRONT 不同, 而是 ASM_FRONT
  var asmDatums = new Array ("ASM_FRONT", "ASM_TOP", "ASM_RIGHT");
// 設定零件檔中的三個定位面, 名稱與 Pro/E WF 中相同
  var compDatums = new Array ("FRONT",
                  "TOP",
                  "RIGHT");
// 建立約束條件變數
  var constrs = pfcCreate ("pfcComponentConstraints");
  
// 利用迴圈分別約束組立與零件檔中的三個定位平面
  for (var i = 0; i &lt; 3; i++)
    {
// 設定組立參考面
      var asmItem =
    assembly.GetItemByName (pfcCreate ("pfcModelItemType").ITEM_SURFACE,
                asmDatums [i]);
// 若無對應的組立參考面, 則啟用互動式平面選擇表單 flag
      if (asmItem == void null)
    {
      interactFlag = true;
      continue;
    }
// 設定零件參考面
      var compItem =
    componentModel.GetItemByName (pfcCreate ("pfcModelItemType").ITEM_SURFACE,
                      compDatums [i]);
// 若無對應的零件參考面, 則啟用互動式平面選擇表單 flag
      if (compItem == void null)
    {
      interactFlag = true;
      continue;
    }
// 建立 ids 變數, intseq 為 sequence of integers 為資料類別, 使用者可以經由整數索引擷取此資料類別的元件, 第一個索引為 0
var ids = pfcCreate ("intseq");
// 建立路徑變數
      var path = pfcCreate ("MpfcAssembly").CreateComponentPath (assembly,
                                 ids);
// 採用互動式設定相關的變數
      var MpfcSelect = pfcCreate ("MpfcSelect");
      var asmSel = MpfcSelect.CreateModelItemSelection (asmItem, path);
      var compSel = MpfcSelect.CreateModelItemSelection (compItem, void null);
      var constr = pfcCreate ("pfcComponentConstraint").Create (
                                pfcCreate ("pfcComponentConstraintType").ASM_CONSTRAINT_ALIGN);
       
      constr.AssemblyReference  = asmSel;
      constr.ComponentReference = compSel;
       
      constr.Attributes = pfcCreate ("pfcConstraintAttributes").Create (false, false);
// 將互動選擇相關資料, 附加在程式約束變數之後
      constrs.Append (constr);
    }
// 設定組立約束條件
asmcomp.SetConstraints (constrs, void null);
        try
        {
                  document.write("目前 Creo 的工作目錄:&lt;br /&gt;"+currentDir);
            }
    catch (err)
        {
            alert ("Exception occurred: "+pfcGetExceptionType (err));
        }
  assembly.Regenerate (void null);
  session.GetModelWindow (assembly).Repaint();
&lt;/script&gt;
&lt;!-- 以下為組立 1 程式 --&gt;
script src="jscript/weblink/pfcUtils.js"&gt;
&lt;/script&gt;&lt;script language="JavaScript"&gt;
      if (!pfcIsWindows())
netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
  var session = pfcGetProESession();
// 建立擺放零件的位置矩陣
  var identityMatrix = pfcCreate ("pfcMatrix3D");
  for (var x = 0; x &lt; 4; x++)
    for (var y = 0; y &lt; 4; y++)
      {
    if (x == y)
      identityMatrix.Set (x, y, 1.0);
    else
      identityMatrix.Set (x, y, 0.0);
      }
  var transf = pfcCreate ("pfcTransform3D").Create (identityMatrix);
// 取得目前的工作目錄
  var currentDir = session.getCurrentDirectory();
// 以目前已開檔, 作為 model
  var model = session.CurrentModel;
// 查驗有無 model, 或 model 類別是否為組立件
  if (model == void null || model.Type != pfcCreate ("pfcModelType").MDL_ASSEMBLY)
    throw new Error (0, "Current model is not an assembly.");
  
  var assembly = model;
  
  var descr =
    pfcCreate ("pfcModelDescriptor").CreateFromFileName ("link1.prt");
// 若 link1.prt 在 session 則直接取用
  var componentModel = session.GetModelFromDescr (descr);
  
// 若 link1.prt 不在 session 則從工作目錄中載入 session
  var componentModel = session.RetrieveModel(descr);
// 若 link1.prt 已經在 session 則放入組立檔中
  if (componentModel != void null)
    {
// 注意這個 asmcomp 即為設定約束條件的本體
// asmcomp 為特徵物件,直接將零件, 以 transf 座標轉換放入組立檔案中
  var asmcomp = assembly.AssembleComponent (componentModel, transf);
    }
var ids = pfcCreate ("intseq");
// 取得 assembly 項下的元件 id, 因為只有一個零件, 採用 index 0 取出其 featID
  var components = assembly.ListFeaturesByType(true, pfcCreate ("pfcFeatureType").FEATTYPE_COMPONENT);
var featID = components.Item(0).Id;
ids.Append(featID);
// 在 assembly 模型中建立子零件所對應的路徑
var subPath =
    pfcCreate ("MpfcAssembly").CreateComponentPath( assembly, ids );
document.write("id 為:"+subPath.ComponentIds(0));
      subassembly = subPath.Leaf;
//  設定組立檔中的三個定位面, 注意內定名稱與 Pro/E WF 中的 ASM_D_FRONT 不同, 而是 ASM_FRONT
  var asmDatums = new Array ("RIGHT", "TOP", "FRONT");
// 設定零件檔中的三個定位面, 名稱與 Pro/E WF 中相同
  var compDatums = new Array ("TOP",
                  "FRONT",
                  "RIGHT");
// 建立約束條件變數
  var constrs = pfcCreate ("pfcComponentConstraints");
// 利用迴圈分別約束組立與零件檔中的三個定位平面
  for (var i = 0; i &lt; 3; i++)
    {
// 設定組立參考面, asmItem 為 model item
      var asmItem =
    subassembly.GetItemByName (pfcCreate ("pfcModelItemType").ITEM_SURFACE,
                asmDatums [i]);
// 若無對應的組立參考面, 則啟用互動式平面選擇表單 flag
      if (asmItem == void null)
    {
      interactFlag = true;
      continue;
    }
// 設定零件參考面, compItem 為 model item
      var compItem =
    componentModel.GetItemByName (pfcCreate ("pfcModelItemType").ITEM_SURFACE,
                      compDatums [i]);
// 若無對應的零件參考面, 則啟用互動式平面選擇表單 flag
      if (compItem == void null)
    {
      interactFlag = true;
      continue;
    }
// 採用互動式設定相關的變數
      var MpfcSelect = pfcCreate ("MpfcSelect");
      var asmSel = MpfcSelect.CreateModelItemSelection (asmItem, subPath);
      var compSel = MpfcSelect.CreateModelItemSelection (compItem, void null);
      var constr = pfcCreate ("pfcComponentConstraint").Create (
                                pfcCreate ("pfcComponentConstraintType").ASM_CONSTRAINT_ALIGN);
       
      constr.AssemblyReference  = asmSel;
      constr.ComponentReference = compSel;
       
      constr.Attributes = pfcCreate ("pfcConstraintAttributes").Create (false, false);
// 將互動選擇相關資料, 附加在程式約束變數之後
      constrs.Append (constr);
    }
// 設定組立約束條件, 以 asmcomp 特徵進行約束條件設定
// 請注意, 第二個變數必須為 void null 表示零件對零件進行約束, 若為 subPath, 則零件會與原始零件的平面進行約束
asmcomp.SetConstraints (constrs, void null);
        try
        {
                  document.write("目前 Creo 的工作目錄:&lt;br /&gt;"+currentDir);
            }
    catch (err)
        {
            alert ("Exception occurred: "+pfcGetExceptionType (err));
        }
  assembly.Regenerate (void null);
  session.GetModelWindow (assembly).Repaint();
&lt;/script&gt;
&lt;!-- 以下為多重組立函式 --&gt;
希望改寫成函式, 可以針對特定約束執行多重自動組立
&lt;script src="jscript/weblink/pfcUtils.js"&gt;
&lt;/script&gt;&lt;script language="JavaScript"&gt;
      if (!pfcIsWindows())
netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
  var session = pfcGetProESession();
// 建立擺放零件的位置矩陣
  var identityMatrix = pfcCreate ("pfcMatrix3D");
  for (var x = 0; x &lt; 4; x++)
    for (var y = 0; y &lt; 4; y++)
      {
    if (x == y)
      identityMatrix.Set (x, y, 1.0);
    else
      identityMatrix.Set (x, y, 0.0);
      }
  var transf = pfcCreate ("pfcTransform3D").Create (identityMatrix);
// 取得目前的工作目錄
  var currentDir = session.getCurrentDirectory();
// 以目前已開檔, 作為 model
  var model = session.CurrentModel;
// 查驗有無 model, 或 model 類別是否為組立件
  if (model == void null || model.Type != pfcCreate ("pfcModelType").MDL_ASSEMBLY)
    throw new Error (0, "Current model is not an assembly.");
  
  var assembly = model;
  
  var descr =
    pfcCreate ("pfcModelDescriptor").CreateFromFileName ("link1.prt");
// 若 link1.prt 在 session 則直接取用
  var componentModel = session.GetModelFromDescr (descr);
  
// 若 link1.prt 不在 session 則從工作目錄中載入 session
  var componentModel = session.RetrieveModel(descr);
// 若 link1.prt 已經在 session 則放入組立檔中
  if (componentModel != void null)
    {
// 注意這個 asmcomp 即為設定約束條件的本體
// asmcomp 為特徵物件,直接將零件, 以 transf 座標轉換放入組立檔案中
  var asmcomp = assembly.AssembleComponent (componentModel, transf);
    }
var ids = pfcCreate ("intseq");
// 取得 assembly 項下的元件 id, 因為只有一個零件, 採用 index 0 取出其 featID
  var components = assembly.ListFeaturesByType(true, pfcCreate ("pfcFeatureType").FEATTYPE_COMPONENT);
var featID = components.Item(0).Id;
ids.Append(featID);
// 在 assembly 模型中建立子零件所對應的路徑
var subPath =
    pfcCreate ("MpfcAssembly").CreateComponentPath( assembly, ids );
document.write("id 為:"+subPath.ComponentIds(0));
      subassembly = subPath.Leaf;
//  設定組立檔中的三個定位面, 注意內定名稱與 Pro/E WF 中的 ASM_D_FRONT 不同, 而是 ASM_FRONT
  var asmDatums = new Array ("RIGHT", "TOP", "FRONT");
// 設定零件檔中的三個定位面, 名稱與 Pro/E WF 中相同
  var compDatums = new Array ("TOP",
                  "FRONT",
                  "RIGHT");
// 建立約束條件變數
  var constrs = pfcCreate ("pfcComponentConstraints");
// 利用迴圈分別約束組立與零件檔中的三個定位平面
  for (var i = 0; i &lt; 3; i++)
    {
// 設定組立參考面, asmItem 為 model item
      var asmItem =
    subassembly.GetItemByName (pfcCreate ("pfcModelItemType").ITEM_SURFACE,
                asmDatums [i]);
// 若無對應的組立參考面, 則啟用互動式平面選擇表單 flag
      if (asmItem == void null)
    {
      interactFlag = true;
      continue;
    }
// 設定零件參考面, compItem 為 model item
      var compItem =
    componentModel.GetItemByName (pfcCreate ("pfcModelItemType").ITEM_SURFACE,
                      compDatums [i]);
// 若無對應的零件參考面, 則啟用互動式平面選擇表單 flag
      if (compItem == void null)
    {
      interactFlag = true;
      continue;
    }
// 採用互動式設定相關的變數
      var MpfcSelect = pfcCreate ("MpfcSelect");
      var asmSel = MpfcSelect.CreateModelItemSelection (asmItem, subPath);
      var compSel = MpfcSelect.CreateModelItemSelection (compItem, void null);
      var constr = pfcCreate ("pfcComponentConstraint").Create (
                                pfcCreate ("pfcComponentConstraintType").ASM_CONSTRAINT_ALIGN);
       
      constr.AssemblyReference  = asmSel;
      constr.ComponentReference = compSel;
       
      constr.Attributes = pfcCreate ("pfcConstraintAttributes").Create (false, false);
// 將互動選擇相關資料, 附加在程式約束變數之後
      constrs.Append (constr);
    }
// 設定組立約束條件, 以 asmcomp 特徵進行約束條件設定
// 請注意, 第二個變數必須為 void null 表示零件對零件進行約束, 若為 subPath, 則零件會與原始零件的平面進行約束
asmcomp.SetConstraints (constrs, void null);
        try
        {
                  document.write("目前 Creo 的工作目錄:&lt;br /&gt;"+currentDir);
            }
    catch (err)
        {
            alert ("Exception occurred: "+pfcGetExceptionType (err));
        }
  assembly.Regenerate (void null);
  session.GetModelWindow (assembly).Repaint();
&lt;/script&gt;</t>
<t tx="2014spring.20140506161101.1956"></t>
<t tx="2014spring.20140506161101.1960"></t>
<t tx="2014spring.20140506161101.1964"></t>
<t tx="2014spring.20140506161101.1968"></t>
<t tx="2014spring.20140506161101.1972"></t>
<t tx="2014spring.20140506161101.1976"></t>
<t tx="2014spring.20140506161101.1980"></t>
<t tx="2014spring.20140506161101.1984"></t>
<t tx="2014spring.20140506174436.1831"></t>
<t tx="2014spring.20140508134612.2129">總結目前所完成的相關配置與任務

  - 最初利用 Dokuwiki on OpenShift 建立多人協同的  wiki 寫作系統
  
  好處是此一系統可以由管理者自由掌控, 所有內容都是純文字檔案, 無需資料庫
  
  -  接著, 為了讓管理者可以利用程式控管 Dokuwiki 多人模式下的帳號與密碼, 採用 Python 3 與  sha1 編碼, 產生多人帳號與密碼, 並且可以自由控管各帳號所能擷取的頁面
  
  - 近端與遠端的 Dokuwiki 可以嵌入 STL 零件, 設計圖片, Vimeo 影片等產品設計相關內容
  
  - 接著為了利用 Python 3 控管多人所建立的文書處理與產品設計程式內容, 利用 Leo Editor 與 CherryPy 建立一個 Github 上全班協同的專案倉儲, 所有 collaborators 可以自由更新專案內容, 而且可以自由編寫 Github 所提供的 Wiki 系統.
  
   - 此外全班協同專案中, 除了各組協同文書處理外, 也透過 CherryPy 與 Python 3 的模組導入, 讓各組各自擁有網際協同程式模組的控制權, 可以利用 Creo Pro/Web.Link 建立網際協同設計程式.
   
   - 協同倉儲的 CherryPy 程式除了可在 Github 上進行版次管理外, 也可與對應的 Bitbucket 倉儲與 OpenShift 雲端網站進行同步, 而雲端網站的同步設定則分為全班協同網站(由老師控管) 以即由各組自行設定對應的 OpenShift 雲端網站兩種.
   
   本週的任務一即是希望透過目前已經完成的協同環境配置, 利用流程圖進行表示, 將各模組的功能與設置目的加以整合, 並將內容放入各組的文書處理區.
   
   但是, 由於全班協同的雲端網站目前並沒有內容管理系統, 因此本週將設法嵌入 CMSimply 套件, 充當全班協同網站的內容管理系統, 以便導引全班協同的相關內容.</t>
<t tx="2014spring.20140508134612.2197">'''
Copyright © 2014 Chiaming Yen

CMSimply is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

CMSimply is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with CMSimply. If not, see &lt;http://www.gnu.org/licenses/&gt;.

***********************************************************************
'''

@language python
@tabwidth -4

&lt;&lt;declarations&gt;&gt;
@others

root = CMSimply()
root.download = Download()


# setup static, images and downloads directories
application_conf = {
        '/static':{
        'tools.staticdir.on': True,
        'tools.staticdir.dir': _curdir+"/static"},
        '/images':{
        'tools.staticdir.on': True,
        'tools.staticdir.dir': data_dir+"/images"},
        '/downloads':{
        'tools.staticdir.on': True,
        'tools.staticdir.dir': data_dir+"/downloads"},
        '/brython_programs':{
        'tools.staticdir.on': True,
        'tools.staticdir.dir': data_dir+"/brython_programs"},
        '/calc_programs':{
        'tools.staticdir.on': True,
        'tools.staticdir.dir': data_dir+"/calc_programs"},
        '/':{
        'tools.staticdir.on': True,
        'tools.staticdir.dir': _curdir+"/static/openjscad"}
    }

# if inOpenshift ('OPENSHIFT_REPO_DIR' exists in environment variables) or not inOpenshift
if __name__ == '__main__':
    if inOpenshift:
        # operate in OpenShift
        application = cherrypy.Application(root, config = application_conf)
    else:
        # operate in localhost
        cherrypy.quickstart(root, config = application_conf)
</t>
<t tx="2014spring.20140508134612.2198">import cherrypy
import re
import os
import math
import hashlib
from cherrypy.lib.static import serve_file
# use quote_plus() to generate URL
import urllib.parse
# use cgi.escape() to resemble php htmlspecialchars()
# use cgi.escape() or html.escape to generate data for textarea tag, otherwise Editor can not deal with some Javascript code.
import cgi

# get the current directory of the file
_curdir = os.path.join(os.getcwd(), os.path.dirname(__file__))
print("current dir:", _curdir)
import sys
sys.path.append(_curdir)

if 'OPENSHIFT_REPO_DIR' in os.environ.keys():
    inOpenshift = True
else:
    inOpenshift = False

if inOpenshift:
    # while program is executed in OpenShift
    download_root_dir = os.environ['OPENSHIFT_DATA_DIR']
    data_dir = os.environ['OPENSHIFT_DATA_DIR']
else:
    # while program is executed in localhost
    download_root_dir = _curdir + "/local_data/"
    data_dir = _curdir + "/local_data/"
    print("data_dir:", data_dir)


</t>
<t tx="2014spring.20140508134612.2199">def downloadlist_access_list(files, starti, endi):
    # different extension files, associated links were provided
    # popup window to view images, video or STL files, other files can be downloaded directly
    # files are all the data to list, from starti to endi
    # add file size
    outstring = ""
    for index in range(int(starti)-1, int(endi)):
        fileName, fileExtension = os.path.splitext(files[index])
        fileExtension = fileExtension.lower()
        fileSize = sizeof_fmt(os.path.getsize(download_root_dir+"downloads/"+files[index]))
        # images files
        if fileExtension == ".png" or fileExtension == ".jpg" or fileExtension == ".gif":
            outstring += '&lt;input type="checkbox" name="filename" value="'+files[index]+'"&gt;&lt;a href="javascript:;" onClick="window.open(\'/downloads/'+ \
            files[index]+'\',\'images\', \'catalogmode\',\'scrollbars\')"&gt;'+files[index]+'&lt;/a&gt; ('+str(fileSize)+')&lt;br /&gt;'
        # stl files
        elif fileExtension == ".stl":
            outstring += '&lt;input type="checkbox" name="filename" value="'+files[index]+'"&gt;&lt;a href="javascript:;" onClick="window.open(\'/static/viewstl.html?src=/downloads/'+ \
            files[index]+'\',\'images\', \'catalogmode\',\'scrollbars\')"&gt;'+files[index]+'&lt;/a&gt; ('+str(fileSize)+')&lt;br /&gt;'
        # flv files
        elif fileExtension == ".flv":
            outstring += '&lt;input type="checkbox" name="filename" value="'+files[index]+'"&gt;&lt;a href="javascript:;" onClick="window.open(\'/flvplayer?filepath=/downloads/'+ \
            files[index]+'\',\'images\', \'catalogmode\',\'scrollbars\')"&gt;'+files[index]+'&lt;/a&gt; ('+str(fileSize)+')&lt;br /&gt;'
        # direct download files
        else:
            outstring += "&lt;input type='checkbox' name='filename' value='"+files[index]+"'&gt;&lt;a href='download/?filepath="+download_root_dir.replace('\\', '/')+ \
            "downloads/"+files[index]+"'&gt;"+files[index]+"&lt;/a&gt; ("+str(fileSize)+")&lt;br /&gt;"
    return outstring
</t>
<t tx="2014spring.20140508134612.2200">def sizeof_fmt(num):
    for x in ['bytes','KB','MB','GB']:
        if num &lt; 1024.0:
            return "%3.1f%s" % (num, x)
        num /= 1024.0
    return "%3.1f%s" % (num, 'TB')
</t>
<t tx="2014spring.20140508134612.2201"># set_admin_css for administrator
def set_admin_css():
    outstring = '''&lt;!doctype html&gt;&lt;html&gt;&lt;head&gt;
&lt;meta http-equiv="content-type" content="text/html;charset=utf-8"&gt;
&lt;title&gt;CMSimply - Simple Cloud CMS in Python 3&lt;/title&gt; \
&lt;link rel="stylesheet" type="text/css" href="/static/cmsimply.css"&gt;
'''+syntaxhighlight()

    outstring += '''
&lt;script src="/static/jquery.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript"&gt;
$(function(){
    $("ul.topmenu&gt; li:has(ul) &gt; a").append('&lt;div class="arrow-right"&gt;&lt;/div&gt;');
    $("ul.topmenu &gt; li ul li:has(ul) &gt; a").append('&lt;div class="arrow-right"&gt;&lt;/div&gt;');
});
&lt;/script&gt;
'''
    # SSL for OpenShift operation
    if inOpenshift:
        outstring += '''
&lt;script type="text/javascript"&gt;
if ((location.href.search(/http:/) != -1) &amp;&amp; (location.href.search(/login/) != -1)) \
window.location= 'https://' + location.host + location.pathname + location.search;
&lt;/script&gt;
'''
    site_title, password = parse_config()
    outstring += '''
&lt;/head&gt;&lt;header&gt;&lt;h1&gt;'''+site_title+'''&lt;/h1&gt; \
&lt;confmenu&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=""&gt;Home&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="sitemap"&gt;SiteMap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="edit_page"&gt;Edit All&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="'''+cherrypy.url(qs=cherrypy.request.query_string)+'''&amp;edit=1"&gt;Edit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="edit_config"&gt;Config&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="search_form"&gt;Search&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="imageuploadform"&gt;Image Upload&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="fileuploadform"&gt;File Upload&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="download_list"&gt;File List&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="logout"&gt;Logout&lt;/a&gt;&lt;/li&gt;
'''
    outstring += '''
&lt;/ul&gt;
&lt;/confmenu&gt;&lt;/header&gt;
'''
    return outstring
</t>
<t tx="2014spring.20140508134612.2202">def set_footer():
    # Extra consideration for cherrypy.url(qs=cherrypy.request.query_string) return no data
    return "&lt;footer&gt; \
        &lt;a href='edit_page'&gt;Edit All&lt;/a&gt;| \
        &lt;a href='"+cherrypy.url(qs=cherrypy.request.query_string)+"&amp;edit=1'&gt;Edit&lt;/a&gt;| \
        &lt;a href='edit_config'&gt;Config&lt;/a&gt; \
        &lt;a href='login'&gt;login&lt;/a&gt;| \
        &lt;a href='logout'&gt;logout&lt;/a&gt; \
        &lt;br /&gt;Powered by &lt;a href='http://cmsimple.cycu.org'&gt;CMSimply&lt;/a&gt; \
        &lt;/footer&gt; \
        &lt;/body&gt;&lt;/html&gt;"
</t>
<t tx="2014spring.20140508134612.2203">def file_get_contents(filename):
    # open file in utf-8 and return file content
    with open(filename, encoding="utf-8") as file:
        return file.read()
</t>
<t tx="2014spring.20140508134612.2204"># use head title to search page content
def search_content(head, page, search):
    return page[head.index(search)]
</t>
<t tx="2014spring.20140508134612.2205">def parse_content():
    if not os.path.isfile(data_dir+"content.htm"):
        # create content.htm if there is no content.htm
        File = open(data_dir+"content.htm", "w", encoding="utf-8")
        File.write("&lt;h1&gt;head 1&lt;/h1&gt;content 1")
        File.close()
    subject = file_get_contents(data_dir+"content.htm")
    # deal with content without heading
    # replace subject content with special seperate string to avoid error 
    subject = re.sub('#@CMSIMPLY_SPLIT@#', '井@CMSIMPLY_SPLIT@井', subject)
    content_sep = '#@CMSIMPLY_SPLIT@#'
    head_level = 3
    # remove all attribute inside h1, h2 and h3 tags
    subject = re.sub('&lt;(h1|h2|h3)[^&gt;]*&gt;', r'&lt;\1&gt;', subject, flags=re.I)
    content = re.split('&lt;/body&gt;', subject)
    result = re.sub('&lt;h[1-'+str(head_level)+']&gt;', content_sep, content[0])
    # remove the first element contains html and body tags
    data = result.split(content_sep)[1:]
    head_list = []
    level_list = []
    page_list = []
    order = 1
    for index in range(len(data)):
        #page_data = re.sub('&lt;/h[1-'+str(head_level)+']&gt;', content_sep, data[index])
        page_data = re.sub('&lt;/h', content_sep, data[index])
        head = page_data.split(content_sep)[0]
        order += 1
        head_list.append(head)
        # put level data into level variable
        level = page_data.split(content_sep)[1][0]
        level_list.append(level)
        # remove  1&gt;,  2&gt; or 3&gt;
        page = page_data.split(content_sep)[1][2:]
        page_list.append(page)
    # send head to unique function to avoid duplicate heading
    #head_list = unique(head_list)
    return head_list, level_list, page_list
</t>
<t tx="2014spring.20140508134612.2206">def render_menu(head, level, page, sitemap=0):
    directory = ""
    current_level = level[0]
    if sitemap:
        directory += "&lt;ul&gt;"
    else:
        directory += "&lt;ul id='css3menu1' class='topmenu'&gt;"
    for index in range(len(head)):
        if level[index] &gt; current_level:
            directory += "&lt;ul&gt;"
            directory += "&lt;li&gt;&lt;a href='get_page?heading="+head[index]+"'&gt;"+head[index]+"&lt;/a&gt;"
        elif level[index] == current_level:
            if level[index] == 1:
                if sitemap:
                    directory += "&lt;li&gt;&lt;a href='get_page?heading="+head[index]+"'&gt;"+head[index]+"&lt;/a&gt;"
                else:
                    directory += "&lt;li class='topmenu'&gt;&lt;a href='get_page?heading="+head[index]+"'&gt;"+head[index]+"&lt;/a&gt;"
            else:
                directory += "&lt;li&gt;&lt;a href='get_page?heading="+head[index]+"'&gt;"+head[index]+"&lt;/a&gt;"
        else:
            directory += "&lt;/li&gt;"*(int(current_level) - int(level[index]))
            directory += "&lt;/ul&gt;"*(int(current_level) - int(level[index]))
            if level[index] == 1:
                if sitemap:
                    directory += "&lt;li&gt;&lt;a href='get_page?heading="+head[index]+"'&gt;"+head[index]+"&lt;/a&gt;"
                else:
                    directory += "&lt;li class='topmenu'&gt;&lt;a href='get_page?heading="+head[index]+"'&gt;"+head[index]+"&lt;/a&gt;"
            else:
                directory += "&lt;li&gt;&lt;a href='get_page?heading="+head[index]+"'&gt;"+head[index]+"&lt;/a&gt;"
        current_level = level[index]
    directory += "&lt;/li&gt;&lt;/ul&gt;"
    return directory
</t>
<t tx="2014spring.20140508134612.2207">def filebrowser():
    return '''
&lt;script type="text/javascript"&gt;
function wrFilebrowser (field_name, url, type, win) {
poppedUpWin = win;
inputField = field_name;
if (type == "file") {type = "downloads"};
// 請注意, 這裡要配合 application 中的 root.cmsimply 設為 cmsimply
var cmsURL = "/cmsimply/file_selector";    

if (cmsURL.indexOf("?") &lt; 0) {
    cmsURL = cmsURL + "?type="+ type ;
}
else {
    cmsURL = cmsURL + "&amp;type="+type ;
}

tinyMCE.activeEditor.windowManager.open(
    {
        file  : cmsURL,
        width : 800,
        height : 600,
        resizable : "yes",
        inline : "yes",
        close_previous : "no",
        popup_css : false,
        scrollbars : "yes"
      },
      {
        window : win,
        input : field_name
      }
);
return false;
}
'''
</t>
<t tx="2014spring.20140508134612.2208">def syntaxhighlight():
    return '''
&lt;script type="text/javascript" src="/static/syntaxhighlighter/shCore.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="/static/syntaxhighlighter/shBrushJScript.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="/static/syntaxhighlighter/shBrushJava.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="/static/syntaxhighlighter/shBrushPython.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="/static/syntaxhighlighter/shBrushSql.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="/static/syntaxhighlighter/shBrushXml.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="/static/syntaxhighlighter/shBrushPhp.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="/static/syntaxhighlighter/shBrushCpp.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="/static/syntaxhighlighter/shBrushCss.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="/static/syntaxhighlighter/shBrushCSharp.js"&gt;&lt;/script&gt;
&lt;link type="text/css" rel="stylesheet" href="/static/syntaxhighlighter/css/shCoreDefault.css"/&gt;
&lt;script type="text/javascript"&gt;SyntaxHighlighter.all();&lt;/script&gt;
'''
</t>
<t tx="2014spring.20140508134612.2209">def editorhead():
    return '''
&lt;script language="javascript" type="text/javascript" src="/static/tinymce3/tiny_mce/tiny_mce.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="/static/tinymce3/init.js"&gt;&lt;/script&gt;
'''
</t>
<t tx="2014spring.20140508134612.2210">def tinymceinit():
    return '''
&lt;script language="javascript" type="text/javascript"&gt;
function tinyMCE_initialize0() {
    tinyMCE_instantiateByClasses('simply-editor', {
// General options

theme : "advanced",
width : "800",
height : "600",
element_format : "html",
language : "en",
plugins : "autosave,pagebreak,style,layer,table,save,advimage,advlink,advhr,emotions,iespell,"
        + "insertdatetime,preview,media,searchreplace,print,contextmenu,paste,directionality,fullscreen,"
        + "noneditable,visualchars,nonbreaking,xhtmlxtras,template,wordcount,media,lists,syntaxhl",

// Theme options
theme_advanced_buttons1 : "save,|,fullscreen,code,formatselect,fontselect,fontsizeselect,styleselect,syntaxhl",
theme_advanced_buttons2 : "bold,italic,underline,strikethrough,|,justifyleft,justifycenter,justifyright,justifyfull,cut,copy,paste,pastetext,pasteword,|,bullist,numlist,outdent,indent,blockquote",
theme_advanced_buttons3 : "undo,redo,|,link,unlink,anchor,image,media,cleanup,|,hr,removeformat,visualaid,|,forecolor,backcolor,|,search,replace,|,charmap",
theme_advanced_buttons4 : "emotions,sub,sup,|,tablecontrols,insertdate,inserttime,help",
theme_advanced_toolbar_location : "top",
theme_advanced_toolbar_align : "left",
theme_advanced_statusbar_location : "bottom",
theme_advanced_resizing : true,
theme_advanced_blockformats : "h1,h2,h3,p,div,h4,h5,h6,blockquote,dt,dd,code",
theme_advanced_font_sizes : "8px=8px, 10px=10px,12px=12px, 14px=14px, 16px=16px, 18px=18px,20px=20px,24px=24px,36px=36px",

content_css : "/static/cmsimply.css",
//link and image list
external_image_list_url: "/static/tinymce3/cms_image_list.js",
external_link_list_url: "/static/tinymce3/cms_link_list.js",

// Extra
plugin_insertdate_dateFormat: "%d-%m-%Y",
plugin_insertdate_timeFormat: "%H:%M:%S",
inline_styles : true,
apply_source_formatting : true,
relative_urls : true,
convert_urls: false,
entity_encoding : "raw",

file_browser_callback: "wrFilebrowser" ,
fullscreen_new_window : false ,
fullscreen_settings : {
theme_advanced_buttons1: "save,|,fullscreen,code,|,formatselect,fontselect,fontsizeselect,styleselect,bold,italic,underline,strikethrough,|,justifyleft,justifycenter,justifyright,justifyfull,cut,copy,paste,pastetext,pasteword,|,bullist,numlist,outdent,indent,blockquote,|,undo,redo",
theme_advanced_buttons2 : "link,unlink,anchor,image,media,cleanup,|,hr,removeformat,visualaid,|,forecolor,backcolor,|,search,replace,|,charmap,emotions,|,sub,sup,tablecontrols,insertdate,inserttime,|,help",
theme_advanced_buttons3 : "",
theme_advanced_buttons4 : ""
}
});
}
&lt;/script&gt;
'''
</t>
<t tx="2014spring.20140508134612.2211">def editorfoot():
    return '''&lt;body id="body"  onload="tinyMCE_initialize0();"&gt;'''
</t>
<t tx="2014spring.20140508134612.2212">def tinymce_editor(menu_input=None, editor_content=None, page_order=None):
    files = os.listdir(download_root_dir+"downloads/")
    link_list = ""
    image_list = ""
    for index in range(len(files)):
        file_url = "download/?filepath="+download_root_dir.replace('\\', '/')+"downloads/"+files[index]
        link_list += "['"+files[index]+"', '"+file_url+"']"
        if index != len(files)-1:
            link_list += ","
    # deal with image link
    images = os.listdir(download_root_dir+"images/")
    for index in range(len(images)):
        image_url = "/images/"+images[index]
        image_list += "['"+images[index]+"', '"+image_url+"']"
        if index != len(images)-1:
            image_list += ","
    sitecontent =file_get_contents(data_dir+"content.htm")
    editor = set_admin_css()+editorhead()+filebrowser()+'''
var myImageList = new Array('''+image_list+''');
var myLinkList = new Array('''+link_list+''');
&lt;/script&gt;'''+tinymceinit()+'''&lt;/head&gt;'''+editorfoot()
    # edit all pages
    if page_order == None:
        outstring = editor + "&lt;div class='container'&gt;&lt;nav&gt;"+ \
            menu_input+"&lt;/nav&gt;&lt;section&gt;&lt;form method='post' action='savePage'&gt; \
     &lt;textarea class='simply-editor' name='page_content' cols='50' rows='15'&gt;"+editor_content+"&lt;/textarea&gt; \
     &lt;input type='submit' value='save'&gt;&lt;/form&gt;&lt;/section&gt;&lt;/body&gt;&lt;/html&gt;"
    else:
        # add viewpage button wilie single page editing
        head, level, page = parse_content()
        outstring = editor + "&lt;div class='container'&gt;&lt;nav&gt;"+ \
            menu_input+"&lt;/nav&gt;&lt;section&gt;&lt;form method='post' action='ssavePage'&gt; \
     &lt;textarea class='simply-editor' name='page_content' cols='50' rows='15'&gt;"+editor_content+"&lt;/textarea&gt; \
&lt;input type='hidden' name='page_order' value='"+str(page_order)+"'&gt; \
     &lt;input type='submit' value='save'&gt;"
        outstring += '''&lt;input type=button onClick="location.href='get_page?heading='''+head[page_order]+ \
            ''''" value='viewpage'&gt;&lt;/form&gt;&lt;/section&gt;&lt;/body&gt;&lt;/html&gt;'''
    return outstring
</t>
<t tx="2014spring.20140508134612.2213">def parse_config():
    if not os.path.isfile(data_dir+"config"):
        # create config file if there is no config file
        file = open(data_dir+"config", "w", encoding="utf-8")
        # default password is admin
        password="admin"
        hashed_password = hashlib.sha512(password.encode('utf-8')).hexdigest()
        file.write("siteTitle:CMSimply - Simple Cloud CMS in Python 3\npassword:"+hashed_password)
        file.close()
    config = file_get_contents(data_dir+"config")
    config_data = config.split("\n")
    site_title = config_data[0].split(":")[1]
    password = config_data[1].split(":")[1]
    return site_title, password
</t>
<t tx="2014spring.20140508134612.2214">def file_selector_script():
    return '''
&lt;script type="text/javascript" src="/static/tinymce3/tiny_mce/tiny_mce_popup.js"&gt;&lt;/script&gt;
&lt;script language="javascript" type="text/javascript"&gt;

var FileBrowserDialogue = {
    
    init : function () {
        // Nothing to do
    },

   
    submit : function (url) {
        var URL = url;
        var win = tinyMCEPopup.getWindowArg("window");
        var input = win.document.getElementById(tinyMCEPopup.getWindowArg("input"));
        win.document.getElementById(tinyMCEPopup.getWindowArg("input")).value = URL;

        input.value = URL;
        if (input.onchange) input.onchange();

        tinyMCEPopup.close();
    }
}

tinyMCEPopup.onInit.add(FileBrowserDialogue.init, FileBrowserDialogue);

function setLink(link){

    FileBrowserDialogue.submit(link);
    return true;
}
&lt;/script&gt;
'''
</t>
<t tx="2014spring.20140508134612.2215">def file_lister(directory, type=None, page=1, item_per_page=10):
    files = os.listdir(download_root_dir+directory)
    total_rows = len(files)
    totalpage = math.ceil(total_rows/int(item_per_page))
    starti = int(item_per_page) * (int(page) - 1) + 1
    endi = starti + int(item_per_page) - 1
    outstring = file_selector_script()
    notlast = False
    if total_rows &gt; 0:
        outstring += "&lt;br /&gt;"
        if (int(page) * int(item_per_page)) &lt; total_rows:
            notlast = True
        if int(page) &gt; 1:
            outstring += "&lt;a href='"
            outstring += "file_selector?type="+type+"&amp;amp;page=1&amp;amp;item_per_page="+str(item_per_page)+"&amp;amp;keyword="+str(cherrypy.session.get('download_keyword'))
            outstring += "'&gt;&lt;&lt;&lt;/a&gt; "
            page_num = int(page) - 1
            outstring += "&lt;a href='"
            outstring += "file_selector?type="+type+"&amp;amp;page="+str(page_num)+"&amp;amp;item_per_page="+str(item_per_page)+"&amp;amp;keyword="+str(cherrypy.session.get('download_keyword'))
            outstring += "'&gt;Previous&lt;/a&gt; "
        span = 10
        for index in range(int(page)-span, int(page)+span):
        #for ($j=$page-$range;$j&lt;$page+$range;$j++)
            if index&gt;= 0 and index&lt; totalpage:
                page_now = index + 1 
                if page_now == int(page):
                    outstring += "&lt;font size='+1' color='red'&gt;"+str(page)+" &lt;/font&gt;"
                else:
                    outstring += "&lt;a href='"
                    outstring += "file_selector?type="+type+"&amp;amp;page="+str(page_now)+"&amp;amp;item_per_page="+str(item_per_page)+"&amp;amp;keyword="+str(cherrypy.session.get('download_keyword'))
                    outstring += "'&gt;"+str(page_now)+"&lt;/a&gt; "

        if notlast == True:
            nextpage = int(page) + 1
            outstring += " &lt;a href='"
            outstring += "file_selector?type="+type+"&amp;amp;page="+str(nextpage)+"&amp;amp;item_per_page="+str(item_per_page)+"&amp;amp;keyword="+str(cherrypy.session.get('download_keyword'))
            outstring += "'&gt;Next&lt;/a&gt;"
            outstring += " &lt;a href='"
            outstring += "file_selector?type="+type+"&amp;amp;page="+str(totalpage)+"&amp;amp;item_per_page="+str(item_per_page)+"&amp;amp;keyword="+str(cherrypy.session.get('download_keyword'))
            outstring += "'&gt;&gt;&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;"
        if (int(page) * int(item_per_page)) &lt; total_rows:
            notlast = True
            if type == "downloads":
                outstring += downloadselect_access_list(files, starti, endi)+"&lt;br /&gt;"
            else:
                outstring += imageselect_access_list(files, starti, endi)+"&lt;br /&gt;"
        else:
            outstring += "&lt;br /&gt;&lt;br /&gt;"
            if type == "downloads":
                outstring += downloadselect_access_list(files, starti, total_rows)+"&lt;br /&gt;"
            else:
                outstring += imageselect_access_list(files, starti, total_rows)+"&lt;br /&gt;"
        if int(page) &gt; 1:
            outstring += "&lt;a href='"
            outstring += "file_selector?type="+type+"&amp;amp;page=1&amp;amp;item_per_page="+str(item_per_page)+"&amp;amp;keyword="+str(cherrypy.session.get('download_keyword'))
            outstring += "'&gt;&lt;&lt;&lt;/a&gt; "
            page_num = int(page) - 1
            outstring += "&lt;a href='"
            outstring += "file_selector?type="+type+"&amp;amp;page="+str(page_num)+"&amp;amp;item_per_page="+str(item_per_page)+"&amp;amp;keyword="+str(cherrypy.session.get('download_keyword'))
            outstring += "'&gt;Previous&lt;/a&gt; "
        span = 10
        for index in range(int(page)-span, int(page)+span):
        #for ($j=$page-$range;$j&lt;$page+$range;$j++)
            if index &gt;=0 and index &lt; totalpage:
                page_now = index + 1
                if page_now == int(page):
                    outstring += "&lt;font size='+1' color='red'&gt;"+str(page)+" &lt;/font&gt;"
                else:
                    outstring += "&lt;a href='"
                    outstring += "file_selector?type="+type+"&amp;amp;page="+str(page_now)+"&amp;amp;item_per_page="+str(item_per_page)+"&amp;amp;keyword="+str(cherrypy.session.get('download_keyword'))
                    outstring += "'&gt;"+str(page_now)+"&lt;/a&gt; "
        if notlast == True:
            nextpage = int(page) + 1
            outstring += " &lt;a href='"
            outstring += "file_selector?type="+type+"&amp;amp;page="+str(nextpage)+"&amp;amp;item_per_page="+str(item_per_page)+"&amp;amp;keyword="+str(cherrypy.session.get('download_keyword'))
            outstring += "'&gt;Next&lt;/a&gt;"
            outstring += " &lt;a href='"
            outstring += "file_selector?type="+type+"&amp;amp;page="+str(totalpage)+"&amp;amp;item_per_page="+str(item_per_page)+"&amp;amp;keyword="+str(cherrypy.session.get('download_keyword'))
            outstring += "'&gt;&gt;&gt;&lt;/a&gt;"
    else:
        outstring += "no data!"

    if type == "downloads":
        return outstring+"&lt;br /&gt;&lt;br /&gt;&lt;a href='/fileuploadform'&gt;file upload&lt;/a&gt;"
    else:
        return outstring+"&lt;br /&gt;&lt;br /&gt;&lt;a href='/imageuploadform'&gt;image upload&lt;/a&gt;"
</t>
<t tx="2014spring.20140508134612.2216">def downloadselect_access_list(files, starti, endi):
    outstring = ""
    for index in range(int(starti)-1, int(endi)):
        fileName, fileExtension = os.path.splitext(files[index])
        fileSize = os.path.getsize(download_root_dir+"/downloads/"+files[index])
        outstring += '''&lt;input type="checkbox" name="filename" value="'''+files[index]+'''"&gt;&lt;a href="#" onclick='window.setLink("download/?filepath='''+ \
        download_root_dir.replace('\\', '/')+'''/downloads/'''+files[index]+'''",0); return false;'&gt;'''+ \
        files[index]+'''&lt;/a&gt; ('''+str(sizeof_fmt(fileSize))+''')&lt;br /&gt;'''
    return outstring
</t>
<t tx="2014spring.20140508134612.2217">def loadlist_access_list(files, starti, endi, filedir):
    # different extension files, associated links were provided
    # popup window to view images, video or STL files, other files can be downloaded directly
    # files are all the data to list, from starti to endi
    # add file size
    outstring = ""
    for index in range(int(starti)-1, int(endi)):
        fileName, fileExtension = os.path.splitext(files[index])
        fileExtension = fileExtension.lower()
        fileSize = sizeof_fmt(os.path.getsize(data_dir+filedir+"_programs/"+files[index]))
        # images files
        if fileExtension == ".png" or fileExtension == ".jpg" or fileExtension == ".gif":
            outstring += '&lt;input type="checkbox" name="filename" value="'+files[index]+'"&gt;&lt;a href="javascript:;" onClick="window.open(\'/downloads/'+ \
            files[index]+'\',\'images\', \'catalogmode\',\'scrollbars\')"&gt;'+files[index]+'&lt;/a&gt; ('+str(fileSize)+')&lt;br /&gt;'
        # stl files
        elif fileExtension == ".stl":
            outstring += '&lt;input type="checkbox" name="filename" value="'+files[index]+'"&gt;&lt;a href="javascript:;" onClick="window.open(\'/static/viewstl.html?src=/downloads/'+ \
            files[index]+'\',\'images\', \'catalogmode\',\'scrollbars\')"&gt;'+files[index]+'&lt;/a&gt; ('+str(fileSize)+')&lt;br /&gt;'
        # flv files
        elif fileExtension == ".flv":
            outstring += '&lt;input type="checkbox" name="filename" value="'+files[index]+'"&gt;&lt;a href="javascript:;" onClick="window.open(\'/flvplayer?filepath=/downloads/'+ \
            files[index]+'\',\'images\', \'catalogmode\',\'scrollbars\')"&gt;'+files[index]+'&lt;/a&gt; ('+str(fileSize)+')&lt;br /&gt;'
        # py files
        elif fileExtension == ".py":
            outstring += '&lt;input type="radio" name="filename" value="'+files[index]+'"&gt;'+files[index]+' ('+str(fileSize)+')&lt;br /&gt;'
        # direct download files
        else:
            outstring += "&lt;input type='checkbox' name='filename' value='"+files[index]+"'&gt;&lt;a href='/"+filedir+"_programs/"+files[index]+"'&gt;"+files[index]+"&lt;/a&gt; ("+str(fileSize)+")&lt;br /&gt;"
    return outstring
</t>
<t tx="2014spring.20140508134612.2218">def imageselect_access_list(files, starti, endi):
    outstring = '''&lt;head&gt;
&lt;style&gt;
a.xhfbfile {padding: 0 2px 0 0; line-height: 1em;}
a.xhfbfile img{border: none; margin: 6px;}
a.xhfbfile span{display: none;}
a.xhfbfile:hover span{
    display: block;
    position: relative;
    left: 150px;
    border: #aaa 1px solid;
    padding: 2px;
    background-color: #ddd;
}
a.xhfbfile:hover{
    background-color: #ccc;
    opacity: .9;
    cursor:pointer;
}
&lt;/style&gt;
&lt;/head&gt;
'''
    for index in range(int(starti)-1, int(endi)):
        fileName, fileExtension = os.path.splitext(files[index])
        fileSize = os.path.getsize(download_root_dir+"/images/"+files[index])
        outstring += '''&lt;a class="xhfbfile" href="#" onclick='window.setLink("download/?filepath='''+ \
        download_root_dir.replace('\\', '/')+'''/images/'''+files[index]+'''",0); return false;'&gt;'''+ \
        files[index]+'''&lt;span style="position: absolute; z-index: 4;"&gt;&lt;br /&gt;
        &lt;img src="download/?filepath='''+ \
        download_root_dir.replace('\\', '/')+'''/images/'''+files[index]+'''" width="150px"/&gt;&lt;/span&gt;&lt;/a&gt; ('''+str(sizeof_fmt(fileSize))+''')&lt;br /&gt;'''
    return outstring
</t>
<t tx="2014spring.20140508134612.2219">def sizeof_fmt(num):
    for x in ['bytes','kb','mb','gb']:
        if num &lt; 1024.0:
            return "%3.1f %s" % (num, x)
        num /= 1024.0
    return "%3.1f %s" % (num, 'tb')
</t>
<t tx="2014spring.20140508134612.2220">def unique(items):
    found = set([])
    keep = []
    count = {}
    for item in items:
        if item not in found:
            count[item] = 0
            found.add(item)
            keep.append(item)
        else:
            count[item] += 1
            keep.append(str(item)+"_"+str(count[item]))
    return keep
</t>
<t tx="2014spring.20140508134612.2221">class CMSimply(object):
    _cp_config = {
    # if there is no utf-8 encoding, no Chinese input available
    'tools.encode.encoding': 'utf-8',
    'tools.sessions.on' : True,
    'tools.sessions.storage_type' : 'file',
    #'tools.sessions.locking' : 'explicit',
    'tools.sessions.storage_path' : data_dir+'/tmp',
    # session timeout is 60 minutes
    'tools.sessions.timeout' : 60
    }
    
    @others
</t>
<t tx="2014spring.20140508134612.2222">def __init__(self):
    # hope to create downloads and images directories　
    if not os.path.isdir(download_root_dir+"downloads"):
        try:
            os.makedirs(download_root_dir+"downloads")
        except:
            print("mkdir error")
    if not os.path.isdir(download_root_dir+"images"):
        try:
            os.makedirs(download_root_dir+"images")
        except:
            print("mkdir error")
    if not os.path.isdir(download_root_dir+"tmp"):
        try:
            os.makedirs(download_root_dir+"tmp")
        except:
            print("mkdir error")
    if not os.path.isdir(data_dir+"brython_programs"):
        try:
            os.makedirs(data_dir+"brython_programs")
        except:
            print("mkdir error")
    if not os.path.isdir(data_dir+"calc_programs"):
        try:
            os.makedirs(data_dir+"calc_programs")
        except:
            print("mkdir error")

</t>
<t tx="2014spring.20140508134612.2223">@cherrypy.expose
def index(self, heading=None, *args, **kwargs):
    head, level, page = parse_content()
    raise cherrypy.HTTPRedirect("get_page?heading=")
    # the following will never execute
    directory = render_menu(head, level, page)
    if heading == None:
        heading = head[0]
    page_order = head.index(heading)
    if page_order == 0:
        last_page = ""
    else:
        last_page = head[page_order-1]+" &lt;&lt; &lt;a href='get_page?heading="+head[page_order-1]+"'&gt;Previous&lt;/a&gt;"
    if page_order == len(head) - 1:
        # no next page
        next_page = ""
    else:
        next_page = "&lt;a href='get_page?heading="+head[page_order+1]+"'&gt;Next&lt;/a&gt; &gt;&gt; "+ head[page_order+1]
    if heading == None:
        #  while there is no content in content.htm
        return self.set_css()+"&lt;div class='container'&gt;&lt;nav&gt;"+ \
        directory+"&lt;/nav&gt;&lt;section&gt;"+last_page+" "+next_page+"&lt;br /&gt;&lt;h1&gt;"+head[0]+"&lt;/h1&gt;"+search_content(head, page, head[0])+"&lt;br /&gt;"+last_page+" "+next_page+"&lt;/section&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;"
    else:
        return self.set_css()+"&lt;div class='container'&gt;&lt;nav&gt;"+ \
        directory+"&lt;/nav&gt;&lt;section&gt;"+last_page+" "+next_page+"&lt;br /&gt;&lt;h1&gt;"+heading+"&lt;/h1&gt;"+search_content(head, page, heading)+"&lt;br /&gt;"+last_page+" "+next_page+"&lt;/section&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;"


</t>
<t tx="2014spring.20140508134612.2224"># default method, if there is no corresponding method, cherrypy will redirect to default method
# need *args and **kwargs as input variables for all possible URL links
@cherrypy.expose
def default_void(self, attr='default', *args, **kwargs):
    raise cherrypy.HTTPRedirect("/")
</t>
<t tx="2014spring.20140508134612.2225">@cherrypy.expose
def error_log(self, info="Error"):
    head, level, page = parse_content()
    directory = render_menu(head, level, page)
    return self.set_css()+"&lt;div class='container'&gt;&lt;nav&gt;"+ \
    directory+"&lt;/nav&gt;&lt;section&gt;&lt;h1&gt;ERROR&lt;/h1&gt;"+info+"&lt;/section&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;"
</t>
<t tx="2014spring.20140508134612.2226">@cherrypy.expose
def login(self):
    head, level, page = parse_content()
    directory = render_menu(head, level, page)
    if not self.isAdmin():
        return self.set_css()+"&lt;div class='container'&gt;&lt;nav&gt;"+ \
    directory+"&lt;/nav&gt;&lt;section&gt;&lt;h1&gt;Login&lt;/h1&gt;&lt;form method='post' action='checkLogin'&gt; \
    Password:&lt;input type='password' name='password'&gt; \
    &lt;input type='submit' value='login'&gt;&lt;/form&gt; \
    &lt;/section&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;"
    else:
        raise cherrypy.HTTPRedirect("/edit_page")
</t>
<t tx="2014spring.20140508134612.2227">@cherrypy.expose
def logout(self):
    cherrypy.session.delete()
    raise cherrypy.HTTPRedirect("/")
</t>
<t tx="2014spring.20140508134612.2228">@cherrypy.expose
def checkLogin(self, password=None):
    site_title, saved_password = parse_config()
    hashed_password = hashlib.sha512(password.encode('utf-8')).hexdigest()
    if hashed_password == saved_password:
        cherrypy.session['admin'] = 1
        raise cherrypy.HTTPRedirect("edit_page")
    raise cherrypy.HTTPRedirect("/")
</t>
<t tx="2014spring.20140508134612.2229"># seperate page need heading and edit variables, if edit=1, system will enter edit mode
# single page edit will use ssavePage to save content, it means seperate save page
@cherrypy.expose
def get_page(self, heading=None, edit=0, *args, **kwargs):
    head, level, page = parse_content()
    directory = render_menu(head, level, page)
    try:
        pagecontent = search_content(head, page, heading)
        page_order = head.index(heading)
    except:
        heading = head[0]
        pagecontent = page[0]
        page_order = 0
    if page_order == 0:
        # no last page
        last_page = ""
    else:
        last_page = head[page_order-1] + " &lt;&lt; &lt;a href='get_page?heading="+head[page_order-1]+"'&gt;Previous&lt;/a&gt;"
    if page_order == len(head) - 1:
        # no next page
        next_page = ""
    else:
        next_page = "&lt;a href='get_page?heading="+head[page_order+1]+"'&gt;Next&lt;/a&gt; &gt;&gt; "+ head[page_order+1]
    
    # edit=0 for viewpage
    if edit == 0:
        if heading == None:
            return page[0]
        else:
            return self.set_css()+"&lt;div class='container'&gt;&lt;nav&gt;"+ \
            directory+"&lt;/nav&gt;&lt;section&gt;"+last_page+" "+next_page+"&lt;br /&gt;&lt;h1&gt;"+heading+"&lt;/h1&gt;"+pagecontent+"&lt;br /&gt;"+last_page+" "+next_page+"&lt;/section&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;"
    # enter edit mode
    else:
        # check if administrator
        if not self.isAdmin():
            raise cherrypy.HTTPRedirect("login")
        else:
            pagedata = "&lt;h"+level[page_order]+"&gt;"+heading+"&lt;/h"+level[page_order]+"&gt;"+search_content(head, page, heading)
            outstring = last_page+" "+next_page+"&lt;br /&gt;"+ tinymce_editor(directory, cgi.escape(pagedata), page_order)
            return outstring
</t>
<t tx="2014spring.20140508134612.2230">def isAdmin(self):
    if cherrypy.session.get('admin') == 1:
            return True
    else:
        return False
</t>
<t tx="2014spring.20140508134612.2231"># edit all page content
@cherrypy.expose
def edit_page(self):
    # check if administrator
    if not self.isAdmin():
        raise cherrypy.HTTPRedirect("login")
    else:
        head, level, page = parse_content()
        directory = render_menu(head, level, page)
        pagedata =file_get_contents(data_dir+"content.htm")
        outstring = tinymce_editor(directory, cgi.escape(pagedata))
        return outstring
</t>
<t tx="2014spring.20140508134612.2232">@cherrypy.expose
def savePage(self, page_content=None):
    # check if administrator
    if not self.isAdmin():
        raise cherrypy.HTTPRedirect("login")
    if page_content == None:
        return self.error_log("no content to save!")
    # we need to check if page heading is duplicated
    file = open(data_dir+"content.htm", "w", encoding="utf-8")
    # in Windows client operator, to avoid textarea add extra \n
    page_content = page_content.replace("\n","")
    file.write(page_content)
    file.close()
    '''
    # need to parse_content() to eliminate duplicate heading
    head, level, page = parse_content()
    file = open(data_dir+"content.htm", "w", encoding="utf-8")
    for index in range(len(head)):
        file.write("&lt;h"+str(level[index])+"&gt;"+str(head[index])+"&lt;/h"+str(level[index])+"&gt;"+str(page[index]))
    file.close()
    '''
    raise cherrypy.HTTPRedirect("edit_page")
</t>
<t tx="2014spring.20140508134612.2233"># seperate save page
@cherrypy.expose
def ssavePage(self, page_content=None, page_order=None):
    if not self.isAdmin():
        raise cherrypy.HTTPRedirect("login")
    if page_content == None:
        return self.error_log("no content to save!")
    page_content = page_content.replace("\n","")
    head, level, page = parse_content()
    file = open(data_dir+"content.htm", "w", encoding="utf-8")
    for index in range(len(head)):
        if index == int(page_order):
            file.write(page_content)
        else:
            file.write("&lt;h"+str(level[index])+"&gt;"+str(head[index])+"&lt;/h"+str(level[index])+"&gt;"+str(page[index]))
    file.close()
    '''
    # need to parse_content() to eliminate duplicate heading
    head, level, page = parse_content()
    file = open(data_dir+"content.htm", "w", encoding="utf-8")
    for index in range(len(head)):
        file.write("&lt;h"+str(level[index])+"&gt;"+str(head[index])+"&lt;/h"+str(level[index])+"&gt;"+str(page[index]))
    file.close()
    '''
    # go back to origin edit status
    edit_url = "get_page?heading="+urllib.parse.quote_plus(head[int(page_order)])+"&amp;edit=1"
    raise cherrypy.HTTPRedirect(edit_url)
</t>
<t tx="2014spring.20140508134612.2234">@cherrypy.expose
def save_program(self, filename=None, editor=None, overwrite=0, delete1=0, delete2=0):
    if not self.isAdmin():
        raise cherrypy.HTTPRedirect("login")
    else:
        if overwrite == "1" or not os.path.isfile(data_dir+"/brython_programs/"+filename):
            # open file in wt will use Windows \r\n for new line
            # use replace method to remove extra lines for Windows environment
            with open(data_dir+"/brython_programs/"+filename, "wt", encoding="utf-8") as out_file:
                data = editor.replace("\r\n", "\n")
                out_file.write(data)
            return str(filename)+" saved!&lt;br /&gt;"
        else:  
            return str(filename)+" exists! editor content not saved yet!&lt;br /&gt;"

</t>
<t tx="2014spring.20140508134612.2235">@cherrypy.expose
def save_calcprogram(self, filename=None, sheet_content=None, overwrite=0, delete1=0, delete2=0):
    if not self.isAdmin():
        raise cherrypy.HTTPRedirect("login")
    else:
        if overwrite == "1" or not os.path.isfile(data_dir+"/calc_programs/"+filename):
            # open file in wt will use Windows \r\n for new line
            # use replace method to remove extra lines for Windows environment
            with open(data_dir+"/calc_programs/"+filename, "wt", encoding="utf-8") as out_file:
                data = sheet_content.replace("\r\n", "\n")
                out_file.write(data)
            return str(filename)+" saved!&lt;br /&gt;"
        else:  
            return str(filename)+" exists! editor content not saved yet!&lt;br /&gt;"

 





</t>
<t tx="2014spring.20140508134612.2236">@cherrypy.expose
def delete_program(self, filename=None, editor=None, overwrite=0, delete1=0, delete2=0):
    if not self.isAdmin():
        raise cherrypy.HTTPRedirect("login")
    else:       
        if delete1 == "1" and delete2 == "1" and os.path.isfile(data_dir+"/brython_programs/"+filename):
            os.remove(data_dir+"/brython_programs/"+filename)
            return str(filename)+" deleted!&lt;br /&gt;"
        elif not os.path.isfile(data_dir+"/brython_programs/"+filename):
            return str(filename)+" does not exist!&lt;br /&gt;"
        else:
            return "can not delete "+str(filename)+"!"
            
</t>
<t tx="2014spring.20140508134612.2237">@cherrypy.expose
def delete_calcprogram(self, filename=None, sheet_content=None, overwrite=0, delete1=0, delete2=0):
    if not self.isAdmin():
        raise cherrypy.HTTPRedirect("login")
    else:       
        if delete1 == "1" and delete2 == "1" and os.path.isfile(data_dir+"/calc_programs/"+filename):
            os.remove(data_dir+"/calc_programs/"+filename)
            return str(filename)+" deleted!&lt;br /&gt;"
        elif not os.path.isfile(data_dir+"/calc_programs/"+filename):
            return str(filename)+" does not exist!&lt;br /&gt;"
        else:
            return "can not delete "+str(filename)+"!"
            
</t>
<t tx="2014spring.20140508134612.2238">@cherrypy.expose
def fileuploadform(self):
    if self.isAdmin():
        head, level, page = parse_content()
        directory = render_menu(head, level, page)
        return self.set_css()+"&lt;div class='container'&gt;&lt;nav&gt;"+ \
        directory+"&lt;/nav&gt;&lt;section&gt;&lt;h1&gt;file upload&lt;/h1&gt;"+'''
\\-4.&lt;script src="/static/jquery.js" type="text/javascript"&gt;&lt;/script&gt;
\\-4.&lt;script src="/static/axuploader.js" type="text/javascript"&gt;&lt;/script&gt;
\\-4.&lt;script&gt;
\\-4.$(document).ready(function(){
\\-4.$('.prova').axuploader({url:'fileaxupload', allowExt:['jpg','png','gif','7z','pdf','zip','flv','stl','swf'],
\\-4.finish:function(x,files)
    {
        alert('All files have been uploaded: '+files);
    },
\\-4.enable:true,
\\-4.remotePath:function(){
\\-2.return 'downloads/';
\\-4.}
\\-4.});
\\-4.});
\\-4.&lt;/script&gt;
\\-4.&lt;div class="prova"&gt;&lt;/div&gt;
\\-4.&lt;input type="button" onclick="$('.prova').axuploader('disable')" value="asd" /&gt;
\\-4.&lt;input type="button" onclick="$('.prova').axuploader('enable')" value="ok" /&gt;
\\-4.&lt;/section&gt;&lt;/body&gt;&lt;/html&gt;
\\-4.'''
    else:
        raise cherrypy.HTTPRedirect("login")
</t>
<t tx="2014spring.20140508134612.2239">@cherrypy.expose
def fileaxupload(self, *args, **kwargs):
    # need to consider if the uploaded filename already existed.
    # right now all existed files will be replaced with the new files
    if self.isAdmin():
        filename = kwargs["ax-file-name"]
        flag = kwargs["start"]
        if flag == "0":
            file = open(download_root_dir+"downloads/"+filename, "wb")
        else:
            file = open(download_root_dir+"downloads/"+filename, "ab")
        file.write(cherrypy.request.body.read())
        file.close()
        return "files uploaded!"
    else:
        raise cherrypy.HTTPRedirect("login")
</t>
<t tx="2014spring.20140508134612.2240">@cherrypy.expose
def flvplayer(self, filepath=None):
    outstring = '''
&lt;object type="application/x-shockwave-flash" data="/static/player_flv_multi.swf" width="320" height="240"&gt;
     &lt;param name="movie" value="player_flv_multi.swf" /&gt;
     &lt;param name="allowFullScreen" value="true" /&gt;
     &lt;param name="FlashVars" value="flv='''+filepath+'''&amp;amp;width=320&amp;amp;height=240&amp;amp;showstop=1&amp;amp;showvolume=1&amp;amp;showtime=1
     &amp;amp;startimage=/static/startimage_en.jpg&amp;amp;showfullscreen=1&amp;amp;bgcolor1=189ca8&amp;amp;bgcolor2=085c68
     &amp;amp;playercolor=085c68" /&gt;
&lt;/object&gt;
'''
    return outstring
</t>
<t tx="2014spring.20140508134612.2241">@cherrypy.expose
def imageuploadform(self):
    if self.isAdmin():
        head, level, page = parse_content()
        directory = render_menu(head, level, page)
        return self.set_css()+"&lt;div class='container'&gt;&lt;nav&gt;"+ \
        directory+"&lt;/nav&gt;&lt;section&gt;&lt;h1&gt;image upload&lt;/h1&gt;"+'''
\\-4.&lt;script src="/static/jquery.js" type="text/javascript"&gt;&lt;/script&gt;
\\-4.&lt;script src="/static/axuploader.js" type="text/javascript"&gt;&lt;/script&gt;
\\-4.&lt;script&gt;
\\-4.$(document).ready(function(){
\\-4.$('.prova').axuploader({url:'imageaxupload', allowExt:['jpg','png','gif'],
\\-4.finish:function(x,files)
    {
        alert('All files have been uploaded: '+files);
    },
\\-4.enable:true,
\\-4.remotePath:function(){
\\-2.return 'images/';
\\-4.}
\\-4.});
\\-4.});
\\-4.&lt;/script&gt;
\\-4.&lt;div class="prova"&gt;&lt;/div&gt;
\\-4.&lt;input type="button" onclick="$('.prova').axuploader('disable')" value="asd" /&gt;
\\-4.&lt;input type="button" onclick="$('.prova').axuploader('enable')" value="ok" /&gt;
\\-4.'''
    else:
        raise cherrypy.HTTPRedirect("login")
</t>
<t tx="2014spring.20140508134612.2242">@cherrypy.expose
def imageaxupload(self, *args, **kwargs):
    if self.isAdmin():
        filename = kwargs["ax-file-name"]
        flag = kwargs["start"]
        if flag == 0:
            file = open(download_root_dir+"images/"+filename, "wb")
        else:
            file = open(download_root_dir+"images/"+filename, "ab")
        file.write(cherrypy.request.body.read())
        file.close()
        return "image files uploaded!"
    else:
        raise cherrypy.HTTPRedirect("login")
</t>
<t tx="2014spring.20140508134612.2243">@cherrypy.expose
def file_selector(self, type=None, page=1, item_per_page=10, keyword=None):
    if not self.isAdmin():
        raise cherrypy.HTTPRedirect("login")
    else:
        if type == "downloads":
            #return downloads_file_selector()
            return file_lister("downloads", type, page, item_per_page)
        elif type == "image":
            #return images_file_selector()
            return file_lister("images", type, page, item_per_page)
</t>
<t tx="2014spring.20140508134612.2244">@cherrypy.expose
def download_list(self, item_per_page=5, page=1, keyword=None, *args, **kwargs):
    if not self.isAdmin():
        raise cherrypy.HTTPRedirect("login")
    # cherrypy.session['admin'] = 1
    # cherrypy.session.get('admin')
    files = os.listdir(download_root_dir+"downloads/")
    total_rows = len(files)
    totalpage = math.ceil(total_rows/int(item_per_page))
    starti = int(item_per_page) * (int(page) - 1) + 1
    endi = starti + int(item_per_page) - 1
    outstring = "&lt;form method='post' action='delete_file'&gt;"
    notlast = False
    if total_rows &gt; 0:
        outstring += "&lt;br /&gt;"
        if (int(page) * int(item_per_page)) &lt; total_rows:
            notlast = True
        if int(page) &gt; 1:
            outstring += "&lt;a href='"
            outstring += "download_list?&amp;amp;page=1&amp;amp;item_per_page="+str(item_per_page)+"&amp;amp;keyword="+str(cherrypy.session.get('download_keyword'))
            outstring += "'&gt;&lt;&lt;&lt;/a&gt; "
            page_num = int(page) - 1
            outstring += "&lt;a href='"
            outstring += "download_list?&amp;amp;page="+str(page_num)+"&amp;amp;item_per_page="+str(item_per_page)+"&amp;amp;keyword="+str(cherrypy.session.get('download_keyword'))
            outstring += "'&gt;Previous&lt;/a&gt; "
        span = 10
        for index in range(int(page)-span, int(page)+span):
            if index&gt;= 0 and index&lt; totalpage:
                page_now = index + 1 
                if page_now == int(page):
                    outstring += "&lt;font size='+1' color='red'&gt;"+str(page)+" &lt;/font&gt;"
                else:
                    outstring += "&lt;a href='"
                    outstring += "download_list?&amp;amp;page="+str(page_now)+"&amp;amp;item_per_page="+str(item_per_page)+"&amp;amp;keyword="+str(cherrypy.session.get('download_keyword'))
                    outstring += "'&gt;"+str(page_now)+"&lt;/a&gt; "

        if notlast == True:
            nextpage = int(page) + 1
            outstring += " &lt;a href='"
            outstring += "download_list?&amp;amp;page="+str(nextpage)+"&amp;amp;item_per_page="+str(item_per_page)+"&amp;amp;keyword="+str(cherrypy.session.get('download_keyword'))
            outstring += "'&gt;Next&lt;/a&gt;"
            outstring += " &lt;a href='"
            outstring += "download_list?&amp;amp;page="+str(totalpage)+"&amp;amp;item_per_page="+str(item_per_page)+"&amp;amp;keyword="+str(cherrypy.session.get('download_keyword'))
            outstring += "'&gt;&gt;&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;"
        if (int(page) * int(item_per_page)) &lt; total_rows:
            notlast = True
            outstring += downloadlist_access_list(files, starti, endi)+"&lt;br /&gt;"
        else:
            outstring += "&lt;br /&gt;&lt;br /&gt;"
            outstring += downloadlist_access_list(files, starti, total_rows)+"&lt;br /&gt;"
        
        if int(page) &gt; 1:
            outstring += "&lt;a href='"
            outstring += "download_list?&amp;amp;page=1&amp;amp;item_per_page="+str(item_per_page)+"&amp;amp;keyword="+str(cherrypy.session.get('download_keyword'))
            outstring += "'&gt;&lt;&lt;&lt;/a&gt; "
            page_num = int(page) - 1
            outstring += "&lt;a href='"
            outstring += "download_list?&amp;amp;page="+str(page_num)+"&amp;amp;item_per_page="+str(item_per_page)+"&amp;amp;keyword="+str(cherrypy.session.get('download_keyword'))
            outstring += "'&gt;Previous&lt;/a&gt; "
        span = 10
        for index in range(int(page)-span, int(page)+span):
        #for ($j=$page-$range;$j&lt;$page+$range;$j++)
            if index &gt;=0 and index &lt; totalpage:
                page_now = index + 1
                if page_now == int(page):
                    outstring += "&lt;font size='+1' color='red'&gt;"+str(page)+" &lt;/font&gt;"
                else:
                    outstring += "&lt;a href='"
                    outstring += "download_list?&amp;amp;page="+str(page_now)+"&amp;amp;item_per_page="+str(item_per_page)+"&amp;amp;keyword="+str(cherrypy.session.get('download_keyword'))
                    outstring += "'&gt;"+str(page_now)+"&lt;/a&gt; "
        if notlast == True:
            nextpage = int(page) + 1
            outstring += " &lt;a href='"
            outstring += "download_list?&amp;amp;page="+str(nextpage)+"&amp;amp;item_per_page="+str(item_per_page)+"&amp;amp;keyword="+str(cherrypy.session.get('download_keyword'))
            outstring += "'&gt;Next&lt;/a&gt;"
            outstring += " &lt;a href='"
            outstring += "download_list?&amp;amp;page="+str(totalpage)+"&amp;amp;item_per_page="+str(item_per_page)+"&amp;amp;keyword="+str(cherrypy.session.get('download_keyword'))
            outstring += "'&gt;&gt;&gt;&lt;/a&gt;"
    else:
        outstring += "no data!"
    outstring += "&lt;br /&gt;&lt;br /&gt;&lt;input type='submit' value='delete'&gt;&lt;input type='reset' value='reset'&gt;&lt;/form&gt;"

    head, level, page = parse_content()
    directory = render_menu(head, level, page)

    return self.set_css()+"&lt;div class='container'&gt;&lt;nav&gt;"+ \
        directory+"&lt;/nav&gt;&lt;section&gt;&lt;h1&gt;Download List&lt;/h1&gt;"+outstring+"&lt;br/&gt;&lt;br /&gt;&lt;/body&gt;&lt;/html&gt;"
</t>
<t tx="2014spring.20140508134612.2245">@cherrypy.expose
def load_list(self, item_per_page=5, page=1, filedir=None, keyword=None, *args, **kwargs):
    '''
    if not self.isAdmin():
        raise cherrypy.HTTPRedirect("login")
    '''
    # cherrypy.session['admin'] = 1
    # cherrypy.session.get('admin')
    files = os.listdir(data_dir+filedir+"_programs/")
    total_rows = len(files)
    totalpage = math.ceil(total_rows/int(item_per_page))
    starti = int(item_per_page) * (int(page) - 1) + 1
    endi = starti + int(item_per_page) - 1
    #outstring = "&lt;form name='filelist' method='post' action='load_program'&gt;"
    outstring = "&lt;form name='filelist' method='post' action=''&gt;"
    notlast = False
    if total_rows &gt; 0:
        # turn off the page selector on top
        '''
        outstring += "&lt;br /&gt;"
        if (int(page) * int(item_per_page)) &lt; total_rows:
            notlast = True
        if int(page) &gt; 1:
            outstring += "&lt;a href='"
            outstring += "brython?&amp;amp;page=1&amp;amp;item_per_page="+str(item_per_page)+"&amp;amp;keyword="+str(cherrypy.session.get('download_keyword'))
            outstring += "'&gt;{{&lt;/a&gt; "
            page_num = int(page) - 1
            outstring += "&lt;a href='"
            outstring += "brython?&amp;amp;page="+str(page_num)+"&amp;amp;item_per_page="+str(item_per_page)+"&amp;amp;keyword="+str(cherrypy.session.get('download_keyword'))
            outstring += "'&gt;Previous&lt;/a&gt; "
        span = 10
        for index in range(int(page)-span, int(page)+span):
            if index&gt;= 0 and index&lt; totalpage:
                page_now = index + 1 
                if page_now == int(page):
                    outstring += "&lt;font size='+1' color='red'&gt;"+str(page)+" &lt;/font&gt;"
                else:
                    outstring += "&lt;a href='"
                    outstring += "brython?&amp;amp;page="+str(page_now)+"&amp;amp;item_per_page="+str(item_per_page)+"&amp;amp;keyword="+str(cherrypy.session.get('download_keyword'))
                    outstring += "'&gt;"+str(page_now)+"&lt;/a&gt; "

        if notlast == True:
            nextpage = int(page) + 1
            outstring += " &lt;a href='"
            outstring += "brython?&amp;amp;page="+str(nextpage)+"&amp;amp;item_per_page="+str(item_per_page)+"&amp;amp;keyword="+str(cherrypy.session.get('download_keyword'))
            outstring += "'&gt;Next&lt;/a&gt;"
            outstring += " &lt;a href='"
            outstring += "brython?&amp;amp;page="+str(totalpage)+"&amp;amp;item_per_page="+str(item_per_page)+"&amp;amp;keyword="+str(cherrypy.session.get('download_keyword'))
            outstring += "'&gt;}}&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;"
        '''
        if (int(page) * int(item_per_page)) &lt; total_rows:
            notlast = True
            outstring += loadlist_access_list(files, starti, endi, filedir)+"&lt;br /&gt;"
        else:
            outstring += "&lt;br /&gt;&lt;br /&gt;"
            outstring += loadlist_access_list(files, starti, total_rows, filedir)+"&lt;br /&gt;"
        
        if int(page) &gt; 1:
            outstring += "&lt;a href='"
            outstring += "/"+filedir+"?&amp;amp;page=1&amp;amp;item_per_page="+str(item_per_page)+"&amp;amp;keyword="+str(cherrypy.session.get('download_keyword'))
            outstring += "'&gt;{{&lt;/a&gt; "
            page_num = int(page) - 1
            outstring += "&lt;a href='"
            outstring += "/"+filedir+"?&amp;amp;page="+str(page_num)+"&amp;amp;item_per_page="+str(item_per_page)+"&amp;amp;keyword="+str(cherrypy.session.get('download_keyword'))
            outstring += "'&gt;Previous&lt;/a&gt; "
        span = 10
        for index in range(int(page)-span, int(page)+span):
        #for ($j=$page-$range;$j&lt;$page+$range;$j++)
            if index &gt;=0 and index &lt; totalpage:
                page_now = index + 1
                if page_now == int(page):
                    outstring += "&lt;font size='+1' color='red'&gt;"+str(page)+" &lt;/font&gt;"
                else:
                    outstring += "&lt;a href='"
                    outstring += "/"+filedir+"?&amp;amp;page="+str(page_now)+"&amp;amp;item_per_page="+str(item_per_page)+"&amp;amp;keyword="+str(cherrypy.session.get('download_keyword'))
                    outstring += "'&gt;"+str(page_now)+"&lt;/a&gt; "
        if notlast == True:
            nextpage = int(page) + 1
            outstring += " &lt;a href='"
            outstring += "/"+filedir+"?&amp;amp;page="+str(nextpage)+"&amp;amp;item_per_page="+str(item_per_page)+"&amp;amp;keyword="+str(cherrypy.session.get('download_keyword'))
            outstring += "'&gt;Next&lt;/a&gt;"
            outstring += " &lt;a href='"
            outstring += "/"+filedir+"?&amp;amp;page="+str(totalpage)+"&amp;amp;item_per_page="+str(item_per_page)+"&amp;amp;keyword="+str(cherrypy.session.get('download_keyword'))
            outstring += "'&gt;}}&lt;/a&gt;"
    else:
        outstring += "no data!"
    #outstring += "&lt;br /&gt;&lt;br /&gt;&lt;input type='submit' value='load'&gt;&lt;input type='reset' value='reset'&gt;&lt;/form&gt;"
    outstring += "&lt;br /&gt;&lt;br /&gt;&lt;/form&gt;"

    return outstring
</t>
<t tx="2014spring.20140508134612.2246">@cherrypy.expose
def delete_file(self, filename=None):
    if not self.isAdmin():
        raise cherrypy.HTTPRedirect("login")
    head, level, page = parse_content()
    directory = render_menu(head, level, page)
    if filename == None:
        outstring = "no file selected!"
        return self.set_css()+"&lt;div class='container'&gt;&lt;nav&gt;"+ \
        directory+"&lt;/nav&gt;&lt;section&gt;&lt;h1&gt;Delete Error&lt;/h1&gt;"+outstring+"&lt;br/&gt;&lt;br /&gt;&lt;/body&gt;&lt;/html&gt;"
    outstring = "delete all these files?&lt;br /&gt;&lt;br /&gt;"
    outstring += "&lt;form method='post' action='doDelete'&gt;"
    # only one file is selected
    if isinstance(filename, str):
        outstring += filename+"&lt;input type='hidden' name='filename' value='"+filename+"'&gt;&lt;br /&gt;"
    else:
        # multiple files selected
        for index in range(len(filename)):
            outstring += filename[index]+"&lt;input type='hidden' name='filename' value='"+filename[index]+"'&gt;&lt;br /&gt;"
    outstring += "&lt;br /&gt;&lt;input type='submit' value='delete'&gt;&lt;/form&gt;"

    return self.set_css()+"&lt;div class='container'&gt;&lt;nav&gt;"+ \
        directory+"&lt;/nav&gt;&lt;section&gt;&lt;h1&gt;Download List&lt;/h1&gt;"+outstring+"&lt;br/&gt;&lt;br /&gt;&lt;/body&gt;&lt;/html&gt;"
</t>
<t tx="2014spring.20140508134612.2247">@cherrypy.expose
def doDelete(self, filename=None):
    if not self.isAdmin():
        raise cherrypy.HTTPRedirect("login")
    # delete files
    outstring = "all these files will be deleted:&lt;br /&gt;&lt;br /&gt;"
    # only select one file
    if isinstance(filename, str):
        try:
            os.remove(download_root_dir+"downloads/"+filename)
            outstring += filename+" deleted!"
        except:
            outstring += filename+"Error, can not delete files!&lt;br /&gt;"
    else:
        # multiple files selected
        for index in range(len(filename)):
            try:
                os.remove(download_root_dir+"downloads/"+filename[index])
                outstring += filename[index]+" deleted!&lt;br /&gt;"
            except:
                outstring += filename[index]+"Error, can not delete files!&lt;br /&gt;"

    head, level, page = parse_content()
    directory = render_menu(head, level, page)

    return self.set_css()+"&lt;div class='container'&gt;&lt;nav&gt;"+ \
        directory+"&lt;/nav&gt;&lt;section&gt;&lt;h1&gt;Download List&lt;/h1&gt;"+outstring+"&lt;br/&gt;&lt;br /&gt;&lt;/body&gt;&lt;/html&gt;"
</t>
<t tx="2014spring.20140508134612.2248">@cherrypy.expose
def creo_getvolume(self, *args, **kwargs):
    return '''
\\-4.&lt;script src="/static/weblink/pfcUtils.js"&gt;
\\-4.&lt;/script&gt;&lt;script  src="/static/weblink/pfcParameterExamples.js"&gt;&lt;/script&gt;&lt;script  src="/static/weblink/pfcComponentFeatExamples.js"&gt;
\\-3.document.writeln ("Error loading script!");
\\-4.&lt;/script&gt;&lt;script language="JavaScript"&gt;
if (!pfcIsWindows())
    netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
\\-2.var session = pfcGetProESession ();
\\-4.// for volume
\\-2.var solid = session.CurrentModel;
try
    {
        createParametersFromArguments ();
        solid.Regenerate(void null);   
        properties = solid.GetMassProperty(void null);
        alert("part volume:"+properties.Volume);
    }
catch (err)
    {
        alert ("Exception occurred: "+pfcGetExceptionType (err));
   }
\\-4.&lt;/script&gt;
\\-4.'''
</t>
<t tx="2014spring.20140508134612.2249">@cherrypy.expose
def anglebracket(self, *args, **kwargs):
    return '''
\\-4.&lt;script src="/static/weblink/pfcUtils.js"&gt;
\\-4.&lt;/script&gt;&lt;script src="/static/weblink/wl_header.js"&gt;
\\-4.document.writeln ("Error loading Pro/Web.Link header!");
\\-4.&lt;/script&gt;&lt;script language="JavaScript"&gt;
\\-4.if (!pfcIsWindows()) netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
\\-4.// if the third input is false, it means use session, but will not be displayed
\\-4.// ret is the model open return
\\-3.var ret = document.pwl.pwlMdlOpen("angle_bracket_creo.prt", "c:/tmp", false);
\\-4.if (!ret.Status) {
alert("pwlMdlOpen failed (" + ret.ErrorCode + ")");
\\-4.}
var session = pfcGetProESession();
var window = session.OpenFile(pfcCreate("pfcModelDescriptor").CreateFromFileName("angle_bracket_creo.prt"));
var solid = session.GetModel("angle_bracket_creo.prt",pfcCreate("pfcModelType").MDL_PART);
var d1,d2,myf,myn,i,j,volume,count,d1Value,d2Value;
d1 = solid.GetParam("len1");
//d2 = solid.GetParam("width");
//myf=20;
//myn=20;
volume=0;
count=0;
try
{
        //createParametersFromArguments ();
        for(i=0;i&lt;=3;i++)
        {
            //for(j=0;j&lt;=2;j++)
            //{
                myf=180+i;
                //myn=100+i*10;
     d1Value = pfcCreate ("MpfcModelItem").CreateDoubleParamValue(myf);
     d2Value = pfcCreate ("MpfcModelItem").CreateDoubleParamValue(myn);
                d1.Value = d1Value;
                //d2.Value = d2Value;
                solid.Regenerate(void null);
                properties = solid.GetMassProperty(void null);
                //volume = volume + properties.Volume;
\\-4.volume = properties.Volume;
                count = count + 1;
\\-4.alert("execute no: "+count+", part volume:"+volume);
\\-4.var newfile = document.pwl.pwlMdlSaveAs("angle_bracket_creo.prt", "c:/tmp", "cadp_w12_py_"+count+".prt");
\\-4.if (!newfile.Status) {
alert("pwlMdlSaveAs failed (" + newfile.ErrorCode + ")");
\\-4.//}
            }
        }
        //alert("totally execute:"+count+"times, part volume:"+volume);
        //alert("part volume:"+properties.Volume);
        //alert("part volume to integer:"+Math.round(properties.Volume));
    }
catch(err)
    {
        alert ("Exception occurred: "+pfcGetExceptionType (err));
    }
\\-4.&lt;/script&gt;
\\-4.'''
</t>
<t tx="2014spring.20140508134612.2250">@cherrypy.expose
def search_form(self):
    if self.isAdmin():
        head, level, page = parse_content()
        directory = render_menu(head, level, page)
        return self.set_css()+"&lt;div class='container'&gt;&lt;nav&gt;"+ \
    directory+"&lt;/nav&gt;&lt;section&gt;&lt;h1&gt;Search&lt;/h1&gt;&lt;form method='post' action='doSearch'&gt; \
    keywords:&lt;input type='text' name='keyword'&gt; \
    &lt;input type='submit' value='search'&gt;&lt;/form&gt; \
    &lt;/section&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;"
    else:
        raise cherrypy.HTTPRedirect("login")
</t>
<t tx="2014spring.20140508134612.2251">@cherrypy.expose
def doSearch(self, keyword=None):
    if not self.isAdmin():
        raise cherrypy.HTTPRedirect("login")
    else:
        head, level, page = parse_content()
        directory = render_menu(head, level, page)
        match = ""
        for index in range(len(head)):
            if keyword != "" and (keyword.lower() in page[index].lower() or \
            keyword.lower() in head[index].lower()): \
                match += "&lt;a href='get_page?heading="+head[index]+"'&gt;"+head[index]+"&lt;/a&gt;&lt;br /&gt;"
        return self.set_css()+"&lt;div class='container'&gt;&lt;nav&gt;"+ \
        directory+"&lt;/nav&gt;&lt;section&gt;&lt;h1&gt;Search Result&lt;/h1&gt;keyword: "+ \
        keyword.lower()+"&lt;br /&gt;&lt;br /&gt;in the following pages:&lt;br /&gt;&lt;br /&gt;"+ \
        match+" \
     &lt;/section&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;"
</t>
<t tx="2014spring.20140508134612.2252">def set_css(self):
    outstring = '''&lt;!doctype html&gt;&lt;html&gt;&lt;head&gt;
&lt;meta http-equiv="content-type" content="text/html;charset=utf-8"&gt;
&lt;title&gt;CMSimply - Simple Cloud CMS in Python 3&lt;/title&gt; \
&lt;link rel="stylesheet" type="text/css" href="/static/cmsimply.css"&gt;
'''+syntaxhighlight()

    outstring += '''
&lt;script src="/static/jquery.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript"&gt;
$(function(){
    $("ul.topmenu&gt; li:has(ul) &gt; a").append('&lt;div class="arrow-right"&gt;&lt;/div&gt;');
    $("ul.topmenu &gt; li ul li:has(ul) &gt; a").append('&lt;div class="arrow-right"&gt;&lt;/div&gt;');
});
&lt;/script&gt;
'''
    if inOpenshift:
        outstring += '''
&lt;script type="text/javascript"&gt;
if ((location.href.search(/http:/) != -1) &amp;&amp; (location.href.search(/login/) != -1)) \
window.location= 'https://' + location.host + location.pathname + location.search;
&lt;/script&gt;
'''
    site_title, password = parse_config()
    outstring += '''
&lt;/head&gt;&lt;header&gt;&lt;h1&gt;'''+site_title+'''&lt;/h1&gt; \
&lt;confmenu&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=""&gt;Home&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="sitemap"&gt;Site Map&lt;/a&gt;&lt;/li&gt;
'''
    if self.isAdmin():
        outstring += '''
&lt;li&gt;&lt;a href="edit_page"&gt;Edit All&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="'''+cherrypy.url(qs=cherrypy.request.query_string)+'''&amp;edit=1"&gt;Edit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="edit_config"&gt;Config&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="search_form"&gt;Search&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="imageuploadform"&gt;image upload&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="fileuploadform"&gt;file upload&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="download_list"&gt;file list&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="logout"&gt;logout&lt;/a&gt;&lt;/li&gt;
'''
    else:
        outstring += '''
&lt;li&gt;&lt;a href="login"&gt;login&lt;/a&gt;&lt;/li&gt;
'''
    outstring += '''
&lt;/ul&gt;
&lt;/confmenu&gt;&lt;/header&gt;
'''
    return outstring
</t>
<t tx="2014spring.20140508134612.2253">@cherrypy.expose
def edit_config(self):
    head, level, page = parse_content()
    directory = render_menu(head, level, page)
    if not self.isAdmin():
        return self.set_css()+"&lt;div class='container'&gt;&lt;nav&gt;"+ \
    directory+"&lt;/nav&gt;&lt;section&gt;&lt;h1&gt;Login&lt;/h1&gt;&lt;form method='post' action='checkLogin'&gt; \
    Password:&lt;input type='password' name='password'&gt; \
    &lt;input type='submit' value='login'&gt;&lt;/form&gt; \
    &lt;/section&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;"
    else:
        site_title, password = parse_config()
        # edit config file
        return self.set_css()+"&lt;div class='container'&gt;&lt;nav&gt;"+ \
    directory+"&lt;/nav&gt;&lt;section&gt;&lt;h1&gt;Edit Config&lt;/h1&gt;&lt;form method='post' action='saveConfig'&gt; \
    Site Title:&lt;input type='text' name='site_title' value='"+site_title+"' size='50'&gt;&lt;br /&gt; \
    Password:&lt;input type='text' name='password' value='"+password+"' size='50'&gt;&lt;br /&gt; \
 &lt;input type='hidden' name='password2' value='"+password+"'&gt; \
    &lt;input type='submit' value='send'&gt;&lt;/form&gt; \
    &lt;/section&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;"
</t>
<t tx="2014spring.20140508134612.2254">@cherrypy.expose
def saveConfig(self, site_title=None, password=None, password2=None):
    if not self.isAdmin():
        raise cherrypy.HTTPRedirect("login")
    if site_title == None or password == None:
        return self.error_log("no content to save!")
    old_site_title, old_password = parse_config()
    head, level, page = parse_content()
    directory = render_menu(head, level, page)
    if site_title == None or password == None or password2 != old_password or password == '':
        return self.set_css()+"&lt;div class='container'&gt;&lt;nav&gt;"+ \
        directory+"&lt;/nav&gt;&lt;section&gt;&lt;h1&gt;Error!&lt;/h1&gt;&lt;a href='/'&gt;Home&lt;/a&gt;&lt;/body&gt;&lt;/html&gt;"
    else:
        if password == password2 and password == old_password:
            hashed_password = old_password
        else:
            hashed_password = hashlib.sha512(password.encode('utf-8')).hexdigest()
        file = open(data_dir+"config", "w", encoding="utf-8")
        file.write("siteTitle:"+site_title+"\npassword:"+hashed_password)
        file.close()
        return self.set_css()+"&lt;div class='container'&gt;&lt;nav&gt;"+ \
        directory+"&lt;/nav&gt;&lt;section&gt;&lt;h1&gt;config file saved&lt;/h1&gt;&lt;a href='/'&gt;Home&lt;/a&gt;&lt;/body&gt;&lt;/html&gt;"
</t>
<t tx="2014spring.20140508134612.2255"># use to check directory variable data
@cherrypy.expose
def listdir(self):
    return download_root_dir +","+data_dir
</t>
<t tx="2014spring.20140508134612.2256">@cherrypy.expose
def sitemap(self):
    head, level, page = parse_content()
    directory = render_menu(head, level, page)
    sitemap = render_menu(head, level, page, sitemap=1)

    return self.set_css()+"&lt;div class='container'&gt;&lt;nav&gt;"+ \
    directory+"&lt;/nav&gt;&lt;section&gt;&lt;h1&gt;Site Map&lt;/h1&gt;"+sitemap+"&lt;/section&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;"
</t>
<t tx="2014spring.20140508134612.2257">@cherrypy.expose
def brython(self, item_per_page=5, page=1, keyword=None, filename=None, *args, **kwargs):
    part1 =  '''
&lt;!DOCTYPE html&gt; 
&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="content-type" content="text/html;charset=utf-8"&gt;
&lt;link rel="stylesheet" type="text/css" href="/static/console.css"&gt;
&lt;link rel="stylesheet" type="text/css" href="/static/brython.css"&gt;
&lt;script type="text/javascript" src="/static/Brython2.1.0-20140419-113919/brython.js"&gt;&lt;/script&gt;
&lt;script src="https://togetherjs.com/togetherjs-min.js"&gt;&lt;/script&gt;
&lt;script src="https://d1n0x3qji82z53.cloudfront.net/src-min-noconflict/ace.js" type="text/javascript"&gt;
&lt;/script&gt;
&lt;script src="/static/Cango2D.js" type="text/javascript"&gt;
&lt;/script&gt;
&lt;script src="/static/yen_fourbar.js" type="text/javascript"&gt;
&lt;/script&gt;
&lt;script src="/static/gearUtils-04.js" type="text/javascript"&gt;
&lt;/script&gt;
&lt;script src="/static/jsc3d.js" type="text/javascript"&gt;
&lt;/script&gt;
&lt;script src="/static/stlviewer.js" type="text/javascript"&gt;
&lt;/script&gt;
&lt;script src="/static/threejs/three.min.js" type="text/javascript"&gt;
&lt;/script&gt;
&lt;script src="/static/threejs/Coordinates.js" type="text/javascript"&gt;
&lt;/script&gt;
&lt;script src="/static/threejs/dat.gui.min.js" type="text/javascript"&gt;
&lt;/script&gt;
&lt;script src="/static/threejs/Detector.js" type="text/javascript"&gt;
&lt;/script&gt;
&lt;script src="/static/threejs/OrbitAndPanControls.js" type="text/javascript"&gt;
&lt;/script&gt;
&lt;script type="text/javascript" &gt;
function getradio(tagname){
var radios = document.getElementsByName(tagname);
for (var i = 0, length = radios.length; i &lt; length; i++) {
    if (radios[i].checked) {
        // do whatever you want with the checked radio
        return radios[i].value;
        // only one radio can be logically checked, don't check the rest
        break;
      }
   }
}

function run_js(){
    var cons = document.getElementById("console")
    var jscode = cons.value
    var t0 = (new Date()).getTime()
    eval(jscode)
    var t1 = (new Date()).getTime()
    console.log("Javascript code run in "+(t1-t0)+" ms")
}
&lt;/script&gt;
&lt;script type="text/python3" src="/static/editor.py"&gt;&lt;/script&gt;

&lt;script type="text/python3"&gt;
from browser import doc

overwrite = 0
# add delete_program 1/7, seven steps to complete the ajax task, the last step is to add delete_program function on server
# delete1 and delete2 parameters are also added into save_program function.
delete1 = 0
delete2 = 0

def set_debug(ev):
    if ev.target.checked:
        __BRYTHON__.debug = 1
    else:
        __BRYTHON__.debug = 0
        
def set_overwrite(ev):
    global overwrite
    if ev.target.checked:
        overwrite = 1
    else:
        overwrite = 0

# add delete_program 2/7, client side add set_delete1 and set_delete2 functions.
def set_delete1(ev):
    global delete1
    if ev.target.checked:
        delete1 = 1
    else:
        delete1 = 0

def set_delete2(ev):
    global delete2
    if ev.target.checked:
        delete2 = 1
    else:
        delete2 = 0

#### ajax process
from browser import ajax,doc

def on_complete(req):
    print(req.readyState)
    print('status',req.status)
    if req.status==200 or req.status==0:
        # show request text on id=result division
        doc["result"].html = req.text
    else:
        doc["result"].html = "error "+req.text

def err_msg():
    doc["result"].html = "server didn't reply after %s seconds" %timeout

timeout = 4

def go(url):
    req = ajax.ajax()
    req.bind('complete', on_complete)
    req.set_timeout(timeout, err_msg)
    req.open('GET', url, True)
    req.send()

def post(url):
    req = ajax.ajax()
    req.bind('complete', on_complete)
    req.set_timeout(timeout, err_msg)
    req.open('POST', url, True)
    req.set_header('content-type','application/x-www-form-urlencoded')
    # doc["filename"].value is the id=filename input field's value
    # editor.getValue() is the content on editor, need to send dictionary format data
    # while post url, need to save editor content into local_storage to use the previous load javascripts
    storage["py_src"] = editor.getValue()
    # add delete_program 3/7, two parameters added, this will also affect save_program function on server.
    req.send({'filename':doc["filename"].value, 'editor':editor.getValue(), 'overwrite':overwrite, 'delete1':delete1, 'delete2':delete2})
    
# get program from server
def get_prog(ev):
    # ajax can only read data from server
    _name = '/brython_programs/'+doc["filename"].value
    try:
        editor.setValue(open(_name, encoding="utf-8").read())
        doc["result"].html = doc["filename"].value+" loaded!"
    except:
        doc["result"].html = "can not get "+doc["filename"].value+"!"
    editor.scrollToRow(0)
    editor.gotoLine(0)
    reset_theme()
    
def get_radio(ev):
    from javascript import JSObject
    filename = JSObject(getradio)("filename")
    # ajax can only read data from server
    doc["filename"].value = filename
    _name = '/brython_programs/'+filename
    editor.setValue(open(_name, encoding="utf-8").read())
    doc["result"].html = filename+" loaded!"
    editor.scrollToRow(0)
    editor.gotoLine(0)
    reset_theme()
    
# bindings
doc['run_js'].bind('click',run_js)
doc['set_debug'].bind('change',set_debug)
'''
    adm1 = '''
doc['set_overwrite'].bind('change',set_overwrite)
# add delete_program 4/7, two associated binds added
doc['set_delete1'].bind('change',set_delete1)
doc['set_delete2'].bind('change',set_delete2)
'''
    part2 = '''
# next functions are defined in editor.py
doc['show_js'].bind('click',show_js)
doc['run'].bind('click',run)
doc['show_console'].bind('click',show_console)
# get_prog and get _radio (working)
doc['get_prog'].bind('click', get_prog)
doc['get_radio'].bind('click', get_radio)
# reset_the_src and clear_console (working)
doc['reset_the_src'].bind('click',reset_the_src)
doc['clear_console'].bind('click',clear_console)
# clear_canvas and clear_src
doc['clear_canvas'].bind('click',clear_canvas)
doc['clear_src'].bind('click',clear_src)
# only admin can save program to server
'''
    adm2 = '''
doc['save_program'].bind('click',lambda ev:post('save_program'))
# add delete_program 5/7, delete_program button bind to execute delete_program on server.
doc['delete_program'].bind('click',lambda ev:post('/delete_program'))
'''
    # if load program through url
    if filename != None:
        load_program = '''
_name = '/brython_programs/'''+filename+''''
try:
    editor.setValue(open(_name, encoding="utf-8").read())
    doc["filename"].value = "'''+filename+'''"
    doc["result"].html = "'''+filename+''' loaded!"
except:
    doc["result"].html = "can not get '''+filename+'''!"
editor.scrollToRow(0)
editor.gotoLine(0)
reset_theme()
'''
    else:
        load_program = ""

    part3 = '''
&lt;/script&gt;
&lt;/head&gt;
&lt;body onload="brython({debug:1, cache:'version'})"&gt;
&lt;table id="banner" cellpadding=0 cellspacing=0&gt;
&lt;tr id="banner_row"&gt;
&lt;td style="width:80px"&gt;&lt;/td&gt;
&lt;td class="alnleft"&gt;
'''
    part4 = '''
&lt;/td&gt;
&lt;td class="alnleft"&gt;
            &lt;button id="reset_the_src"&gt;reset the_src&lt;/button&gt;
            &lt;button id="clear_src"&gt;clear src&lt;/button&gt;
            &lt;button id="clear_console"&gt;clear console&lt;/button&gt;
            &lt;button id="clear_canvas"&gt;clear canvas&lt;/button&gt;
            &lt;button onclick="TogetherJS(this); return false;"&gt;Start TogetherJS&lt;/button&gt;
            &lt;br /&gt;filename: &lt;input id="filename"&gt;
'''
    adm3 = '''
            &lt;button id="save_program"&gt;save program&lt;/button&gt;
            overwrite&lt;input type="checkbox" id="set_overwrite"&gt;
            &lt;br /&gt;&lt;!-- add delete_program button and two double checkboxs 6/7 --&gt;
            &lt;button id="delete_program"&gt;delete program&lt;/button&gt;
            sure to delete1&lt;input type="checkbox" id="set_delete1"&gt;
            sure to delete2&lt;input type="checkbox" id="set_delete2"&gt;
'''
    part5 = '''
            &lt;div id="result"&gt;(empty)&lt;/div&gt;
            &lt;button id="get_radio"&gt;load selected program&lt;/button&gt;
            &lt;button onClick="window.location.reload()"&gt;reload page&lt;/button&gt;
            &lt;button id="get_prog"&gt;get prog file&lt;/button&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;!--
&lt;div style="text-align:center"&gt;
&lt;br&gt;Brython version: &lt;span id="version"&gt;&lt;/span&gt;
&lt;/div&gt;
--&gt;
&lt;div id="container"&gt;
&lt;div id="left-div"&gt;
&lt;div style="padding: 3px 3px 3px 3px;"&gt;
Theme: &lt;select id="ace_theme"&gt;
&lt;optgroup label="Bright"&gt;
&lt;option value="ace/theme/chrome"&gt;Chrome&lt;/option&gt;
&lt;option value="ace/theme/crimson_editor"&gt;Crimson Editor&lt;/option&gt;
&lt;option value="ace/theme/eclipse"&gt;Eclipse&lt;/option&gt;
&lt;option value="ace/theme/github"&gt;GitHub&lt;/option&gt;
&lt;/optgroup&gt;
&lt;optgroup label="Dark"&gt;
&lt;option value="ace/theme/cobalt"&gt;Cobalt&lt;/option&gt;
&lt;option value="ace/theme/idle_fingers"&gt;idleFingers&lt;/option&gt;
&lt;option value="ace/theme/monokai"&gt;Monokai&lt;/option&gt;
&lt;option value="ace/theme/pastel_on_dark"&gt;Pastel on dark&lt;/option&gt;
&lt;option value="ace/theme/vibrant_ink"&gt;Vibrant Ink&lt;/option&gt;
&lt;/optgroup&gt;
&lt;/select&gt; 
&lt;/div&gt;
  &lt;div id="editor"&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id="right-div"&gt;
&lt;div style="padding: 3px 3px 3px 3px;"&gt;
  &lt;div style="float:left"&gt;
    &lt;button id="run"&gt;run&lt;/button&gt;
    &lt;button id="run_js"&gt;run Javascript&lt;/button&gt;
    debug&lt;input type="checkbox" id="set_debug" checked&gt;
  &lt;/div&gt;

  &lt;div style="float:right"&gt;
    &lt;button id="show_console"&gt;Console&lt;/button&gt;
    &lt;button id="show_js"&gt;Javascript&lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style="width:100%;height:100%;"&gt;
&lt;textarea id="console"&gt;&lt;/textarea&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div style="float:left;margin-top:50px;"&gt;
&lt;canvas id="plotarea" width="800" height="600"&gt;&lt;/canvas&gt;
&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
'''
    if not self.isAdmin():
        return part1+part2+load_program+part3+self.load_list(item_per_page, page, "brython")+part4+part5
    else:
        return part1+adm1+part2+adm2+load_program+part3+self.load_list(item_per_page, page, "brython")+part4+adm3+part5
</t>
<t tx="2014spring.20140508134612.2258">@cherrypy.expose
def ethercalc(self, filename=None, *args, **kwargs):
    part1 = '''
&lt;!DOCTYPE html&gt; 
&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="content-type" content="text/html;charset=utf-8"&gt;
&lt;script type="text/javascript" src="/static/Brython2.1.0-20140419-113919/brython.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="/static/socialcalc/socialcalcconstants.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="/static/socialcalc/socialcalc-3.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="/static/socialcalc/socialcalctableeditor.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="/static/socialcalc/formatnumber2.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="/static/socialcalc/formula1.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="/static/socialcalc/socialcalcpopup.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="/static/socialcalc/socialcalcspreadsheetcontrol.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="/static/socialcalc/socialcalcviewer.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body onload="brython({debug:1, cache:'version'})"&gt;
&lt;div id="tableeditor" style="margin:8px 0px 10px 0px;"&gt;editor goes here&lt;/div&gt;
&lt;/div&gt;
&lt;div id="msg" onclick="this.innerHTML='&amp;nbsp;';"&gt;&lt;/div&gt;

&lt;script id="ascript" type="text/python"&gt;
from browser import ajax, doc, alert, websocket
from javascript import JSConstructor

spreadsheet =  JSConstructor(SocialCalc.SpreadsheetControl)()
savestr = ""
spreadsheet.InitializeSpreadsheetControl("tableeditor")
spreadsheet.ExecuteCommand('redisplay', '')

def on_complete(req):
    print(req.readyState)
    print('status',req.status)
    if req.status==200 or req.status==0:
        doc["result"].html = req.text
    else:
        doc["result"].html = "error "+req.text

def err_msg():
    doc["result"].html = "server didn't reply after %s seconds" %timeout

timeout = 4

def go(url):
    req = ajax.ajax()
    req.bind('complete',on_complete)
    req.set_timeout(timeout,err_msg)
    req.open('GET',url,True)
    req.send()

def post(url):
    global spreadsheet
    sheet_content = spreadsheet.CreateSpreadsheetSave()
    req = ajax.ajax()
    req.bind('complete',on_complete)
    req.set_timeout(timeout,err_msg)
    req.open('POST',url,True)
    req.set_header('content-type','application/x-www-form-urlencoded')
    req.send({'filename':doc["filename"].value, 'sheet_content':sheet_content})

def show_save(ev):
    global spreadsheet
    sheet_content = spreadsheet.CreateSpreadsheetSave()
    print(sheet_content)
    
def doreload(ev):
    global spreadsheet
    sheet_content = spreadsheet.CreateSpreadsheetSave()
    parts = spreadsheet.DecodeSpreadsheetSave(sheet_content)
    if (parts):
        if (parts.sheet):
            spreadsheet.sheet.ResetSheet()
            spreadsheet.ParseSheetSave(sheet_content[parts.sheet.start:parts.sheet.end])
        if (parts.edit):
            spreadsheet.editor.LoadEditorSettings(sheet_content[parts.edit.start:parts.edit.end])

    #if (spreadsheet.editor.context.sheetobj.attribs.recalc=="off"):
        #spreadsheet.ExecuteCommand('redisplay', '')
    #else:
    spreadsheet.ExecuteCommand('recalc', '')
    alert("reload done")

# get program from server
def get_prog(ev):
    # ajax can only read data from server
    _name = '/calc_programs/'+doc["filename"].value
    try:
        sheet_content = open(_name, encoding="utf-8").read()
        parts = spreadsheet.DecodeSpreadsheetSave(sheet_content)
        if (parts):
            if (parts.sheet):
                spreadsheet.sheet.ResetSheet()
                spreadsheet.ParseSheetSave(sheet_content[parts.sheet.start:parts.sheet.end])
            if (parts.edit):
                spreadsheet.editor.LoadEditorSettings(sheet_content[parts.edit.start:parts.edit.end])
        spreadsheet.ExecuteCommand('recalc', '')
        doc["result"].html = doc["filename"].value+" loaded!"
    except:
        doc["result"].html = "can not get "+doc["filename"].value+"!"

# for built-in websocket
def on_open(evt):
    doc['send_button'].disabled = False
    doc['closebtn'].disabled = False
    doc['openbtn'].disabled = True

def on_message(evt):
    # message reeived from server
    alert("Message received : %s" %evt.data)

def on_close(evt):
    # websocket is closed
    alert("Connection is closed")
    doc['openbtn'].disabled = False
    doc['closebtn'].disabled = True
    doc['send_button'].disabled = True

ws = None
def _open(evt):
    global spreadsheet
    sheet_content = spreadsheet.CreateSpreadsheetSave()
    if not __BRYTHON__.has_websocket:
        alert("WebSocket is not supported by your browser")
        return
    global ws
    # open a web socket
    ws = websocket.websocket("wss://localhost:8000")
    # bind functions to web socket events
    ws.bind('open',on_open)
    ws.bind(sheet_content,on_message)
    ws.bind('close',on_close)

def send(evt):
    data = doc["data"].value
    if data:
        ws.send(data)

def close_connection(evt):
    ws.close()
    doc['openbtn'].disabled = False

# bindings
#doc['timeout'].bind('click',lambda ev:go('/ajax.py'))
doc['save_program'].bind('click',lambda ev:post('save_calcprogram'))
doc['get_prog'].bind('click', get_prog)
doc['show_save'].bind('click', show_save)
doc['doreload'].bind('click', doreload)
doc['openbtn'].bind('click', _open)
'''
    # if load program through url
    if filename != None:
        load_program = '''
# ajax can only read data from server
_name = '/calc_programs/'''+filename+''''
try:
    sheet_content = open(_name, encoding="utf-8").read()
    parts = spreadsheet.DecodeSpreadsheetSave(sheet_content)
    if (parts):
        if (parts.sheet):
            spreadsheet.sheet.ResetSheet()
            spreadsheet.ParseSheetSave(sheet_content[parts.sheet.start:parts.sheet.end])
        if (parts.edit):
            spreadsheet.editor.LoadEditorSettings(sheet_content[parts.edit.start:parts.edit.end])
    spreadsheet.ExecuteCommand('recalc', '')
    doc["filename"].value = "'''+filename+'''"
    doc["result"].html = "'''+filename+''' loaded!"
except:
    doc["result"].html = "can not get '''+filename+'''!"
'''
    else:
        load_program = ""

    part2 = '''
&lt;/script&gt;
&lt;button id="show_save"&gt;顯示內容&lt;/button&gt;
&lt;button id="doreload"&gt;do reload&lt;/button&gt;
&lt;button onClick=exec_command();&gt;exec command&lt;/button&gt;
&lt;button id="save_program";&gt;save program&lt;/button&gt;
filename: &lt;input id="filename"&gt;
&lt;button id="get_prog"&gt;get prog file&lt;/button&gt;&lt;br /&gt;
&lt;div id="result"&gt;(empty)&lt;/div&gt;&lt;br /&gt;
&lt;button id="openbtn"&gt;Open connection&lt;/button&gt; 
&lt;input id="data"&gt;
&lt;button id="send_button" disabled onclick="send()"&gt;Send&lt;/button&gt;
&lt;button id="closebtn" disabled onclick="close_connection()"&gt;Close connection&lt;/button&gt;
&lt;/body&gt;
&lt;/html&gt;
'''
    return part1+load_program+part2

</t>
<t tx="2014spring.20140508134612.2259">@cherrypy.expose
def calc(self, item_per_page=5, page=1, keyword=None, filename=None, *args, **kwargs):
    part1 = '''
&lt;!DOCTYPE html&gt; 
&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="content-type" content="text/html;charset=utf-8"&gt;
&lt;script type="text/javascript" src="/static/Brython2.1.0-20140419-113919/brython.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="/static/socialcalc/socialcalcconstants.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="/static/socialcalc/socialcalc-3.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="/static/socialcalc/socialcalctableeditor.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="/static/socialcalc/formatnumber2.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="/static/socialcalc/formula1.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="/static/socialcalc/socialcalcpopup.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="/static/socialcalc/socialcalcspreadsheetcontrol.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="/static/socialcalc/socialcalcviewer.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript"&gt;
function getradio(tagname){
var radios = document.getElementsByName(tagname);
for (var i = 0, length = radios.length; i &lt; length; i++) {
    if (radios[i].checked) {
        // do whatever you want with the checked radio
        return radios[i].value;
        // only one radio can be logically checked, don't check the rest
        break;
      }
   }
}
&lt;/script&gt;
&lt;/head&gt;
&lt;body onload="brython({debug:1, cache:'version'})"&gt;
&lt;div id="tableeditor" style="margin:8px 0px 10px 0px;"&gt;editor goes here&lt;/div&gt;
&lt;div id="msg" onclick="this.innerHTML='&amp;nbsp;';"&gt;&lt;/div&gt;

&lt;script id="ascript" type="text/python"&gt;
from browser import ajax, doc, alert, websocket
from javascript import JSConstructor

spreadsheet =  JSConstructor(SocialCalc.SpreadsheetControl)()
savestr = ""
spreadsheet.InitializeSpreadsheetControl("tableeditor")
spreadsheet.ExecuteCommand('redisplay', '')

overwrite = 0
# add delete_program 1/7, seven steps to complete the ajax task, the last step is to add delete_program function on server
# delete1 and delete2 parameters are also added into save_program function.
delete1 = 0
delete2 = 0

def set_overwrite(ev):
    global overwrite
    if ev.target.checked:
        overwrite = 1
    else:
        overwrite = 0

# add delete_program 2/7, client side add set_delete1 and set_delete2 functions.
def set_delete1(ev):
    global delete1
    if ev.target.checked:
        delete1 = 1
    else:
        delete1 = 0

def set_delete2(ev):
    global delete2
    if ev.target.checked:
        delete2 = 1
    else:
        delete2 = 0

def on_complete(req):
    print(req.readyState)
    print('status',req.status)
    if req.status==200 or req.status==0:
        doc["result"].html = req.text
    else:
        doc["result"].html = "error "+req.text

def err_msg():
    doc["result"].html = "server didn't reply after %s seconds" %timeout

timeout = 4

def go(url):
    req = ajax.ajax()
    req.bind('complete',on_complete)
    req.set_timeout(timeout,err_msg)
    req.open('GET',url,True)
    req.send()

def post(url):
    global spreadsheet
    sheet_content = spreadsheet.CreateSpreadsheetSave()
    req = ajax.ajax()
    req.bind('complete',on_complete)
    req.set_timeout(timeout,err_msg)
    req.open('POST',url,True)
    req.set_header('content-type','application/x-www-form-urlencoded')
    # add delete_program 3/7, two parameters added, this will also affect save_program function on server.
    req.send({'filename':doc["filename"].value, 'sheet_content':sheet_content, 'overwrite':overwrite, 'delete1':delete1, 'delete2':delete2})

def show_save(ev):
    global spreadsheet
    sheet_content = spreadsheet.CreateSpreadsheetSave()
    print(sheet_content)
    
def doreload(ev):
    global spreadsheet
    sheet_content = spreadsheet.CreateSpreadsheetSave()
    parts = spreadsheet.DecodeSpreadsheetSave(sheet_content)
    if (parts):
        if (parts.sheet):
            spreadsheet.sheet.ResetSheet()
            spreadsheet.ParseSheetSave(sheet_content[parts.sheet.start:parts.sheet.end])
        if (parts.edit):
            spreadsheet.editor.LoadEditorSettings(sheet_content[parts.edit.start:parts.edit.end])

    #if (spreadsheet.editor.context.sheetobj.attribs.recalc=="off"):
        #spreadsheet.ExecuteCommand('redisplay', '')
    #else:
    spreadsheet.ExecuteCommand('recalc', '')
    alert("reload done")

# get program from server
def get_prog(ev):
    # ajax can only read data from server
    _name = '/calc_programs/'+doc["filename"].value
    try:
        sheet_content = open(_name, encoding="utf-8").read()
        parts = spreadsheet.DecodeSpreadsheetSave(sheet_content)
        if (parts):
            if (parts.sheet):
                spreadsheet.sheet.ResetSheet()
                spreadsheet.ParseSheetSave(sheet_content[parts.sheet.start:parts.sheet.end])
            if (parts.edit):
                spreadsheet.editor.LoadEditorSettings(sheet_content[parts.edit.start:parts.edit.end])
        spreadsheet.ExecuteCommand('recalc', '')
        doc["result"].html = doc["filename"].value+" loaded!"
    except:
        doc["result"].html = "can not get "+doc["filename"].value+"!"

def get_radio(ev):
    from javascript import JSObject
    filename = JSObject(getradio)("filename")
    # ajax can only read data from server
    doc["filename"].value = filename
    _name = '/calc_programs/'+filename
    try:
        sheet_content = open(_name, encoding="utf-8").read()
        parts = spreadsheet.DecodeSpreadsheetSave(sheet_content)
        if (parts):
            if (parts.sheet):
                spreadsheet.sheet.ResetSheet()
                spreadsheet.ParseSheetSave(sheet_content[parts.sheet.start:parts.sheet.end])
            if (parts.edit):
                spreadsheet.editor.LoadEditorSettings(sheet_content[parts.edit.start:parts.edit.end])
        spreadsheet.ExecuteCommand('recalc', '')
        doc["result"].html = doc["filename"].value+" loaded!"
    except:
        doc["result"].html = "can not get "+doc["filename"].value+"!"

# bindings
doc['get_prog'].bind('click', get_prog)
doc['get_radio'].bind('click', get_radio)
doc['doreload'].bind('click', doreload)
'''
    adm1 = '''
doc['save_program'].bind('click',lambda ev:post('save_calcprogram'))
# add delete_program 5/7, delete_program button bind to execute delete_program on server.
doc['delete_program'].bind('click',lambda ev:post('/delete_calcprogram'))
doc['show_save'].bind('click', show_save)
doc['set_overwrite'].bind('change',set_overwrite)
# add delete_program 4/7, two associated binds added
doc['set_delete1'].bind('change',set_delete1)
doc['set_delete2'].bind('change',set_delete2)
'''
    # if load program through url
    if filename != None:
        load_program = '''
# ajax can only read data from server
_name = '/calc_programs/'''+filename+''''
try:
    sheet_content = open(_name, encoding="utf-8").read()
    parts = spreadsheet.DecodeSpreadsheetSave(sheet_content)
    if (parts):
        if (parts.sheet):
            spreadsheet.sheet.ResetSheet()
            spreadsheet.ParseSheetSave(sheet_content[parts.sheet.start:parts.sheet.end])
        if (parts.edit):
            spreadsheet.editor.LoadEditorSettings(sheet_content[parts.edit.start:parts.edit.end])
    spreadsheet.ExecuteCommand('recalc', '')
    doc["filename"].value = "'''+filename+'''"
    doc["result"].html = "'''+filename+''' loaded!"
except:
    doc["result"].html = "can not get '''+filename+'''!"
'''
    else:
        load_program = ""

    part2 = '''
&lt;/script&gt;
filename: &lt;input id="filename"&gt;
&lt;button id="get_prog"&gt;get prog file&lt;/button&gt;&lt;br /&gt;
&lt;div id="result"&gt;(empty)&lt;/div&gt;&lt;br /&gt;
&lt;button id="doreload"&gt;do reload&lt;/button&gt;
&lt;button id="get_radio"&gt;load selected program&lt;/button&gt;&lt;br /&gt;
'''
    adm2 = '''
&lt;button id="show_save"&gt;顯示內容&lt;/button&gt;
&lt;button id="save_program";&gt;save program&lt;/button&gt;
overwrite&lt;input type="checkbox" id="set_overwrite"&gt;
&lt;br /&gt;&lt;!-- add delete_program button and two double checkboxs 6/7 --&gt;
&lt;button id="delete_program"&gt;delete program&lt;/button&gt;
sure to delete1&lt;input type="checkbox" id="set_delete1"&gt;
sure to delete2&lt;input type="checkbox" id="set_delete2"&gt;&lt;br /&gt;
'''
    part3 = '''
&lt;/body&gt;
&lt;/html&gt;
'''
    # only admin can view and edit calc, we still need to find a way to protect programs on calc_programs
    if not self.isAdmin():
        raise cherrypy.HTTPRedirect("login")
        # for not admin
        #return part1+load_program+part2+self.load_list(item_per_page, page, "calc")+part3
    else:
        # for admin
        return part1+adm1+load_program+part2+adm2+self.load_list(item_per_page, page, "calc")+part3

</t>
<t tx="2014spring.20140508134612.2260">@cherrypy.expose
def openjscad(self, *args, **kwargs):
    return '''
&lt;!DOCTYPE html&gt;
&lt;html&gt;&lt;head&gt;
&lt;meta http-equiv="content-type" content="text/html; charset=UTF-8"/&gt;
&lt;title&gt;OpenJSCAD.org&lt;/title&gt;
&lt;link rel="stylesheet" href="/jquery/themes/base/jquery-ui.css" /&gt;
&lt;script src="/jquery/jquery-1.9.1.js"&gt;&lt;/script&gt;
&lt;script src="/jquery/jquery-ui.js"&gt;&lt;/script&gt;
&lt;script src="/jquery/jquery.hammer.js"&gt;&lt;/script&gt;
&lt;link rel="stylesheet" href="/style.css" type="text/css"&gt;
&lt;link rel="stylesheet" href="/openjscad.css" type="text/css"&gt;
&lt;/head&gt;
&lt;body onload="onload()"&gt;
&lt;style&gt;
/* we choose chrome theme for ace, and make sure line number is transparent too */
/* this has to stay in the body (not head) otherwise does not take effect */
.ace-chrome .ace_gutter { 
   border-left: 2px dashed rgba(200,200,200,0.2);
   background: none;
}
.ace-chrome {
   font-size: 10pt;     // -- not 'px', but 'pt' for high dpi screens
}
&lt;/style&gt;
&lt;script src="/lightgl.js"&gt;&lt;/script&gt;
&lt;script src="/csg.js"&gt;&lt;/script&gt;
&lt;script src="/openjscad.js"&gt;&lt;/script&gt;
&lt;script src="/openscad.js"&gt;&lt;/script&gt;
&lt;script src="/underscore.js"&gt;&lt;/script&gt;
&lt;script src="/openscad-openjscad-translator.js"&gt;&lt;/script&gt;
&lt;script lang=JavaScript&gt;
var version = '0.017 (2014/02/14)';
var me = document.location.toString().match(/^file:/)?'web-offline':'web-online'; // me: {cli, web-offline, web-online}
var browser = 'unknown';
if(navigator.userAgent.match(/(opera|chrome|safari|firefox|msie)/i))
   browser = RegExp.$1.toLowerCase();

$(document).ready(function() {
   $("#viewer").height($(window).height());

   $(window).resize(function() {                // adjust the relevant divs
      $("#viewer").width($(window).width());
      $("#viewer").height($(window).height());
   });


});   
&lt;/script&gt;
&lt;div id="editor"&gt;// -- OpenJSCAD.org logo
function main(params)
{
  // Main entry point; here we construct our solid: 
  var gear = involuteGear(
    params.numTeeth,
    params.circularPitch,
    params.pressureAngle,
    params.clearance,
    params.thickness
  );
  if(params.centerholeradius &gt; 0)
  {
    var centerhole = CSG.cylinder({start: [0,0,-params.thickness], end: [0,0,params.thickness], radius: params.centerholeradius, resolution: 16});
    gear = gear.subtract(centerhole);
  }
  return gear;
}

// Here we define the user editable parameters: 
function getParameterDefinitions() {
  return [
    { name: 'numTeeth', caption: 'Number of teeth:', type: 'int', default: 15 },
    { name: 'circularPitch', caption: 'Circular pitch:', type: 'float', default: 10 },
    { name: 'pressureAngle', caption: 'Pressure angle:', type: 'float', default: 20 },
    { name: 'clearance', caption: 'Clearance:', type: 'float', default: 0 },
    { name: 'thickness', caption: 'Thickness:', type: 'float', default: 5 },
    { name: 'centerholeradius', caption: 'Radius of center hole (0 for no hole):', type: 'float', default: 2 },
  ];
}

/*
  For gear terminology see: 
    http://www.astronomiainumbria.org/advanced_internet_files/meccanica/easyweb.easynet.co.uk/_chrish/geardata.htm
  Algorithm based on:
    http://www.cartertools.com/involute.html

  circularPitch: The distance between adjacent teeth measured at the pitch circle
*/ 
function involuteGear(numTeeth, circularPitch, pressureAngle, clearance, thickness)
{
  // default values:
  if(arguments.length &lt; 3) pressureAngle = 20;
  if(arguments.length &lt; 4) clearance = 0;
  if(arguments.length &lt; 4) thickness = 1;
  
  var addendum = circularPitch / Math.PI;
  var dedendum = addendum + clearance;
  
  // radiuses of the 4 circles:
  var pitchRadius = numTeeth * circularPitch / (2 * Math.PI);
  var baseRadius = pitchRadius * Math.cos(Math.PI * pressureAngle / 180);
  var outerRadius = pitchRadius + addendum;
  var rootRadius = pitchRadius - dedendum;

  var maxtanlength = Math.sqrt(outerRadius*outerRadius - baseRadius*baseRadius);
  var maxangle = maxtanlength / baseRadius;

  var tl_at_pitchcircle = Math.sqrt(pitchRadius*pitchRadius - baseRadius*baseRadius);
  var angle_at_pitchcircle = tl_at_pitchcircle / baseRadius;
  var diffangle = angle_at_pitchcircle - Math.atan(angle_at_pitchcircle);
  var angularToothWidthAtBase = Math.PI / numTeeth + 2*diffangle;

  // build a single 2d tooth in the 'points' array:
  var resolution = 5;
  var points = [new CSG.Vector2D(0,0)];
  for(var i = 0; i &lt;= resolution; i++)
  {
    // first side of the tooth:
    var angle = maxangle * i / resolution;
    var tanlength = angle * baseRadius;
    var radvector = CSG.Vector2D.fromAngle(angle);    
    var tanvector = radvector.normal();
    var p = radvector.times(baseRadius).plus(tanvector.times(tanlength));
    points[i+1] = p;
    
    // opposite side of the tooth:
    radvector = CSG.Vector2D.fromAngle(angularToothWidthAtBase - angle);    
    tanvector = radvector.normal().negated();
    p = radvector.times(baseRadius).plus(tanvector.times(tanlength));
    points[2 * resolution + 2 - i] = p;
  }

  // create the polygon and extrude into 3D:
  var tooth3d = new CSG.Polygon2D(points).extrude({offset: [0, 0, thickness]});

  var allteeth = new CSG();
  for(var i = 0; i &lt; numTeeth; i++)
  {
    var angle = i*360/numTeeth;
    var rotatedtooth = tooth3d.rotateZ(angle);
    allteeth = allteeth.unionForNonIntersecting(rotatedtooth);
  }

  // build the root circle:  
  points = [];
  var toothAngle = 2 * Math.PI / numTeeth;
  var toothCenterAngle = 0.5 * angularToothWidthAtBase; 
  for(var i = 0; i &lt; numTeeth; i++)
  {
    var angle = toothCenterAngle + i * toothAngle;
    var p = CSG.Vector2D.fromAngle(angle).times(rootRadius);
    points.push(p);
  }

  // create the polygon and extrude into 3D:
  var rootcircle = new CSG.Polygon2D(points).extrude({offset: [0, 0, thickness]});

  var result = rootcircle.union(allteeth);

  // center at origin:
  result = result.translate([0, 0, -thickness/2]);

  return result;
}
&lt;/div&gt;

&lt;div oncontextmenu="return false;" id="viewer"&gt;&lt;/div&gt; &lt;!-- avoiding popup when right mouse is clicked --&gt;

&lt;div id="parametersdiv"&gt;&lt;/div&gt;
&lt;div id="tail"&gt;
&lt;div id="statusdiv"&gt;&lt;/div&gt;
&lt;div id="errordiv"&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;!--&lt;script src="/ace/ace.js" type="text/javascript" charset="utf-8"&gt;&lt;/script&gt;--&gt;
&lt;script src="https://d1n0x3qji82z53.cloudfront.net/src-min-noconflict/ace.js" type="text/javascript" charset="utf-8"&gt;&lt;/script&gt;
&lt;script&gt;
var gProcessor = null;
var editor = null;
var _includePath = "/";

function onload() {
   // -- http://ace.ajax.org/#nav=howto
   editor = ace.edit("editor");
   editor.setTheme("ace/theme/chrome");
   //document.getElementById('ace_gutter').style.background = 'none';
   editor.getSession().setMode("ace/mode/javascript");
   editor.getSession().on('change', function(e) {});               
   ['Shift-Return'].forEach(function(key) {
      editor.commands.addCommand({
         name: 'myCommand',
         bindKey: { win: key, mac: key },
         exec: function(editor) {
            var src = editor.getValue();
            if(src.match(/^\/\/\!OpenSCAD/i)) {
               editor.getSession().setMode("ace/mode/scad");
               src = openscadOpenJscadParser.parse(src);
            } else {
               editor.getSession().setMode("ace/mode/javascript");
            }
            gMemFs = [];
            gProcessor.setJsCad(src);
         },
      });
   });
   
   gProcessor = new OpenJsCad.Processor(document.getElementById("viewer"));

   //gProcessor.setDebugging(debugging); 
   if(me=='web-online') {    // we are online, fetch first example
      gProcessor.setJsCad(editor.getValue());
   }
}

// Show all exceptions to the user:
OpenJsCad.AlertUserOfUncaughtExceptions();
&lt;/script&gt;
&lt;/body&gt;&lt;/html&gt; 
'''
</t>
<t tx="2014spring.20140508134612.2261">@cherrypy.expose
def ucrobot(self):
    return '''
&lt;html&gt;&lt;head&gt;&lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8"&gt;
        &lt;/head&gt;
	&lt;body style="overflow:auto; margin:0; padding:0;position:relative"&gt;
		&lt;div id="container" onclick="this.focus();"&gt;&lt;/div&gt;
		&lt;div id="grading"&gt;&lt;/div&gt;
&lt;script type="text/javascript" src="/static/threejs/Detector.js"&gt;&lt;/script&gt;
		&lt;script type="text/javascript"&gt;
		if ( ! Detector.webgl ) { 
				Detector.addGetWebGLMessage();
		}
		&lt;/script&gt;
		&lt;script type="text/javascript" src="/static/threejs/three.min.js"&gt;&lt;/script&gt;
          &lt;script type="text/javascript" src="/static/threejs/Coordinates.js"&gt;&lt;/script&gt;
		&lt;script type="text/javascript" src="/static/threejs/OrbitAndPanControls.js"&gt;&lt;/script&gt;
		&lt;script type="text/javascript" src="/static/threejs/dat.gui.min.js"&gt;&lt;/script&gt;
		&lt;script type="text/javascript" src="/static/threejs/demo.js"&gt;&lt;/script&gt;

&lt;/body&gt;&lt;/html&gt;
'''
</t>
<t tx="2014spring.20140508134612.2262">class Download:
    @others
</t>
<t tx="2014spring.20140508134612.2263">@cherrypy.expose
def index(self, filepath):
    return serve_file(filepath, "application/x-download", "attachment")
</t>
<t tx="2014spring.20140513092629.1905"></t>
<t tx="2014spring.20140513092629.2151"></t>
<t tx="2014spring.20140513154549.2217"></t>
<t tx="2014spring.20140513154549.2221"></t>
<t tx="2014spring.20140513154549.2225"></t>
<t tx="2014spring.20140513154549.2229"></t>
<t tx="course-mde-tw.20140417093332.1998"></t>
<t tx="course-mde-tw.20140417093332.1999">QSplitter::handle {
    background-color: #CAE1FF; /* lightSteelBlue1 */
}

QStackedWidget {
    /* background-color:lightpink; */
    border-color: red;
    padding: 0px;
    /* border-width: 0px; */
    /* background-color: yellow; */
}

QSplitter {
    border-color: white;
    background-color: white;
    border-style: solid;
}

QTreeWidget {
    /* These apply to the selected item, but not to editing items.*/
    background-color: #ffffec; /* Leo's traditional tree color */
    selection-color: black; /* was white */
    selection-background-color: lightgrey;
    /* font-family: SansSerif; */
    /*font-family: DejaVu Sans Mono;*/
    font-family:YaHei Mono;
    /* 標題字型大小設定 */
    font-size: 22px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
 }

/* Headline edit widgets */
QTreeWidget QLineEdit {
    background-color: cornsilk;
    selection-color: white;
    selection-background-color: blue;
    /*font-family: DejaVu Sans Mono;*/    
    font-family:YaHei Mono;
    /* 沒有特別對應字型大小 */
    font-size: 22px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
}

/* The log panes */
QTextEdit {
    background-color: #f2fdff;
    selection-color: red;
    selection-background-color: blue;
    /* font-family: Courier New; */
    font-family:YaHei Mono;
    /* log font 大小 */
    font-size: 22px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
}

/* The body pane */
QTextEdit#richTextEdit {
    background-color: #fdf5f5; /* A kind of pink. */
    selection-color: white;
    selection-background-color: red;
    /*font-family: DejaVu Sans Mono;*/
    /* font-family: Courier New; */
    font-family:YaHei Mono;
    /* 內文字型大小 */
    font-size: 22px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
}

QLabel {
    font-family:YaHei Mono;
    /* 下方的 Minibuffer 標題字型大小 */
    font-size: 22px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
}

/* Editor labels */
QLineEdit#editorLabel {
    background-color: #ffffec;
    font-family:YaHei Mono;
    /* 沒有直接對應字型大小 */
    font-size: 22px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
    border: 2px;
    margin: 2px;
}</t>
<t tx="course-mde-tw.20140417093332.2000">horizontal: body pane to the left
vertical: body pane on the botton</t>
<t tx="course-mde-tw.20140417093332.2001"></t>
<t tx="course-mde-tw.20140417093332.2027"></t>
<t tx="course-mde-tw.20140417093332.2047">各組的報告統一放在 doc 目錄下, 並且按照分組編號作為目錄名稱

最後希望能夠利用程式整合各分組報告內容, 統一處理成為 pdf 與 html 檔案

目錄架構:

doc 
    2ag1
        doc.txt
    2ag2
        doc.txt</t>
<t tx="course-mde-tw.20140417093332.2048"></t>
<t tx="course-mde-tw.20140417093332.2049"></t>
<t tx="course-mde-tw.20140417093332.2051"></t>
<t tx="course-mde-tw.20140417093332.2058">@language latex

% 中文內容設定

\usepackage{xeCJK}    % 中英文字行分開設置
\usepackage[T1]{fontspec}    %設定字體用
\usepackage{graphicx}
\usepackage{fancyvrb} % for frame on Verbatim
% 新細明體
% 文鼎ＰＬ新宋
\setCJKmainfont{新細明體}</t>
<t tx="course-mde-tw.20140417093332.2060"></t>
<t tx="course-mde-tw.20140417093332.2063">@language md
"# This is my README" 

同步規劃:

Bitbucket: https://bitbucket.org/cmsimply/public_cmsimply

Bitbucket 免費帳號特性:

可以自由將倉儲轉為 public 或 private, 沒有限制

每一倉儲最多只能有 5 個 collaborators

OpenShift: http://cdproject-coursemdetw.rhcloud.com/

OpenShift 免費帳號特性:

支援各種網際程式雲端部署, 但是每一帳號至多只能建 3 個應用程式

接下來要加上與 Github 的全班協同倉儲進行同步

Github 免費帳號特性:

免費帳號只能使用 public 倉儲

沒有限制 collaborators 個數, 適合多協同人員執行開放專案使用
</t>
<t tx="course-mde-tw.20140422171455.1745">在 Github 倉儲中將 OpenShift 倉儲設為 remote 倉儲

git remote add openshift ssh://5356315e4382ec2b3f000557@2014cda-mdenfu.rhcloud.com/~/git/2014cda.git/

利用 git pull 拉下目前位於 OpenShift 對應倉儲上的程式碼

git pull 的目的在設法讓 OpenShift 與 Github 中的 git 專案合併

若與 Github 近端倉儲中的資料沒有產生衝突, 則可以在內容修改後, 同時 push 到 Github 與 OpenShift

目前 OpenShift 網站: http://2014cda-mdenfu.rhcloud.com/

Github 倉儲則為: https://github.com/coursemdetw/2014cda

目前的規劃是讓參與協同者可以自由更新 Github 倉儲內容

並且將 Github 倉儲與各組可以控制的 OpenShift 網站同步</t>
<t tx="course-mde-tw.20140422221207.1747">mathspec.sty 檔案必須放在 pandoc 目錄中, 與文書處理原始檔案放在一起.</t>
<t tx="kmolII_lite.20140430001511.1599"></t>
<t tx="kmolII_lite.20140513162816.2130"></t>
</tnodes>
</leo_file>
